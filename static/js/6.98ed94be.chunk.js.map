{"version":3,"sources":["hooks/useQuery.ts","utils/index.ts","components/VisualRegExp.tsx","hooks/useRegulex.ts","components/CodeBlock.tsx","components/CopyAction.tsx","components/OutLink.tsx","pages/RegExpPage/RegExpChips.tsx","pages/RegExpPage/RegExpTestPanel.tsx","pages/RegExpPage/RegExpMatchPanel.tsx","pages/RegExpPage/index.tsx","pages/RegExpPage/RegExpReplacePanel.tsx"],"names":["useQuery","useLocation","pathname","search","history","useHistory","searchParams","URLSearchParams","query","key","value","useCallback","toString","replace","escape","str","quote","RegExp","useStyles","makeStyles","theme","regexpContainer","width","overflow","textAlign","error","color","VisualRegExp","regexp","boxProps","containerRef","useRef","styles","regulex","useAsync","a","Promise","resolve","reject","script","document","createElement","src","process","onload","window","require","onerror","Error","body","appendChild","useState","setError","useEffect","current","innerHTML","parse","visualize","paper","Raphael","source","flags","undefined","err","_err","RegexSyntaxError","msg","message","lastIndex","push","repeat","join","Box","Typography","className","component","ref","style","height","CodeBlock","code","language","children","defaultProps","Array","isArray","githubTheme","tokens","getLineProps","getTokenProps","lineHeight","py","px","margin","map","line","i","token","CopyAction","text","enqueueSnackbar","useSnackbar","display","root","onCopy","autoHideDuration","Tooltip","title","IconButton","FileCopyOutlined","OutLink","href","target","OpenInNew","RegExpChips","onSelect","flexWrap","tags","REG_EXP_ARR","label","Chip","variant","onClick","marginRight","spacing","marginBottom","RegExpTestPanel","setText","useMemo","result1","result2","error1","error2","test","escapedText","code1","code2","console","log","flexDirection","TextField","multiline","fullWidth","onChange","e","mt","alignItems","bgcolor","flexGrow","String","supportMatchAll","prototype","RegExpMatchPanel","result3","error3","exec","match","matchAll","code3","stringifyRegExpExecArray","stringifyRegExpMatchArray","stringifyRegExpMatchAllResult","result","JSON","stringify","forEach","index","input","groups","length","item","next","done","Language","TabIndex","RegExpReplacePanel","replacer","setReplacer","isReplacerInfoVisible","setIsReplacerInfoVisible","isReplacerStr","setIsReplaceStr","matches","replacerLiteral","global","_replacer","groupsLiteral","filter","v","reduce","b","n","indent","Function","placeholder","FormLabel","FormControlLabel","control","Switch","checked","_","Table","size","TableHead","TableRow","TableCell","TableBody","substring","patterns","Object","keys","record","isNumber","regexpInput","fontSize","fontFamily","codeFontFamily","expand","transform","transition","transitions","create","duration","shortest","expandOpen","TabPanel","id","props","pt","flagItems","flag","RegExpPage","defaultValue","TEST","setQuery","tabIndex","parseInt","tab","setTabIndex","useTabIndex","useRegExp","setRegexp","newText","useTheme","useMediaQuery","breakpoints","down","expanded","setExpanded","JavaScript","setLanguage","separator","pb","MATCH","REPLACE","PageLayout","xs","md","flexBasis","Input","startAdornment","newFlags","split","includes","Checkbox","onFlagChange","justifyContent","mr","Tabs","textColor","indicatorColor","Tab","COMMONLY_USED_REGEXP","my","Card","CardContent","CardActions","ml","Select","MenuItem","Button","marginLeft","endIcon","ExpandMore","clsx","Collapse","in"],"mappings":"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","file":"static/js/6.98ed94be.chunk.js","sourcesContent":["import { useLocation, useHistory } from \"react-router-dom\";\nimport { useCallback } from \"react\";\n\n/**\n * 获取 URL 查询参数\n * 例如 regexp?source=abc&flags=g 返回查询参数 {source: \"abc\", flags: \"g\"}\n */\nexport const useQuery = () => {\n  const {pathname, search} = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(search);\n  const query: Record<string, string> = {}\n  for(let [key, value] of searchParams) {\n    query[key] = value\n  }\n  const setQuery = useCallback(\n    (query: Record<string, string>) => {\n      const search = new URLSearchParams(query).toString();\n      history.replace({ pathname, search });\n    },\n    [history, pathname]\n  );\n\n  return [query, setQuery] as const;\n};","export const debugErr = (...args: any[]) =>\r\n  process.env.NODE_ENV !== \"production\" && console.error(...args);\r\nexport const debugLog = (...args: any[]) =>\r\n  process.env.NODE_ENV !== \"production\" && console.log(...args);\r\nexport const debugWarn = (...args: any[]) =>\r\n  process.env.NODE_ENV !== \"production\" && console.warn(...args);\r\n\r\n// 转义代码\r\nexport const escape = (str: string, quote: string) =>\r\n  str.replace(new RegExp(quote, 'g'), '\\\\' + quote).replace(/\\n/g, '\\\\n')\r\n\r\nexport const copyToClipboard = (text: string): boolean => {\r\n  const textArea = document.createElement('textarea')\r\n\r\n  textArea.style.position = 'fixed'\r\n  textArea.style.visibility = '-10000px'\r\n  textArea.value = text\r\n\r\n  document.body.appendChild(textArea)\r\n  textArea.focus()\r\n  textArea.select()\r\n\r\n  if (!document.execCommand('copy')) {\r\n    console.warn('浏览器不支持 document.execCommand(\"copy\")')\r\n    document.body.removeChild(textArea)\r\n    return false\r\n  } else {\r\n    document.body.removeChild(textArea)\r\n    return true\r\n  }\r\n}","import React, { useRef, useState, useEffect } from 'react'\r\nimport { useRegulex } from 'hooks';\r\nimport { debugErr } from 'utils';\r\nimport { Typography, BoxProps, Box } from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  regexpContainer: {\r\n    width: \"100%\",\r\n    overflow: \"auto\",\r\n    textAlign: \"center\"\r\n  },\r\n  error: {\r\n    width: \"100%\",\r\n    color: \"red\",\r\n    overflow: \"auto\"\r\n  }\r\n}));\r\n\r\nexport type RegExpType = {\r\n  source: string;\r\n  flags: string;\r\n};\r\n\r\nexport type VisualRegExpProps = {\r\n  regexp: RegExpType\r\n} & BoxProps\r\n\r\nexport const VisualRegExp: React.FC<VisualRegExpProps> = ({ regexp, ...boxProps}) => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const styles = useStyles();\r\n  const { value: regulex } = useRegulex();\r\n  const [error, setError] = useState<Error>();\r\n  useEffect(() => {\r\n    if (!regulex || !containerRef.current) return;\r\n\r\n    // 清除生成的图片\r\n    containerRef.current.innerHTML = \"\";\r\n\r\n    const { parse, visualize, Raphael } = regulex;\r\n    var paper = Raphael(containerRef.current, 0, 0);\r\n    try {\r\n      // 重新生成图片\r\n      visualize(parse(regexp.source), regexp.flags, paper);\r\n      // 重置错误\r\n      setError(undefined);\r\n    } catch (err) {\r\n      let _err = err;\r\n      // 如果是语法错误，格式化错误\r\n      if (err instanceof parse.RegexSyntaxError) {\r\n        var msg = [\"Error:\" + err.message, \"\"];\r\n        if (typeof err.lastIndex === \"number\") {\r\n          msg.push(regexp.source);\r\n          msg.push(\"-\".repeat(err.lastIndex) + \"^\");\r\n        }\r\n        _err = new Error(msg.join(\"\\n\"));\r\n      }\r\n      setError(_err);\r\n      debugErr(_err);\r\n    }\r\n  }, [regexp, regulex]);\r\n  return (\r\n    <Box {...boxProps}>\r\n      {error && (\r\n        <Typography className={styles.error} component=\"pre\">\r\n          <code>{error.message}</code>\r\n        </Typography>\r\n      )}\r\n      <div\r\n        ref={containerRef}\r\n        className={styles.regexpContainer}\r\n        style={{ height: error ? 0 : \"auto\" }}\r\n      />\r\n    </Box>\r\n  );\r\n};","import { useAsync } from \"react-use\";\n\nexport default function useRegulex() {\n  return useAsync(async () => {\n    return new Promise<any>((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.src = process.env.PUBLIC_URL + \"/regulex.js\";\n      script.onload = () => {\n        const regulex = window.require(\"regulex\");\n        resolve(regulex);\n      };\n      script.onerror = () => {\n        reject(new Error(\"load regulex error!\"));\n      };\n      document.body.appendChild(script);\n    });\n  });\n}\n","import React from \"react\";\nimport Highlight, { defaultProps, Language } from \"prism-react-renderer\";\nimport githubTheme from \"prism-react-renderer/themes/github\";\nimport { Box } from \"@material-ui/core\";\n\nexport type CodeBlockProps = {\n  code?: string;\n  children?: string | string[]\n  language?: Language;\n};\n\nexport const CodeBlock: React.FC<CodeBlockProps> = ({ code = '', language = 'json',  children = '' }) => {\n  return (\n    <Highlight\n      {...defaultProps}\n      code={code || (Array.isArray(children) ? children.join('') : children)}\n      language={language}\n      theme={githubTheme}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <Box\n          component=\"pre\"\n          lineHeight={1.5}\n          py={1}\n          px={1}\n          className={className}\n          style={{...style, margin: 0}}\n        >\n          <Box component=\"code\">\n            {tokens.map((line, i) => (\n              <div {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n          </Box>\n        </Box>\n      )}\n    </Highlight>\n  );\n};\n","import React from \"react\";\r\nimport { Box, Tooltip, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport { FileCopyOutlined } from \"@material-ui/icons\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport type CopyActionProps = {\r\n  text: string\r\n};\r\n\r\nexport const CopyAction: React.FC<CopyActionProps> = ({text}) => {\r\n  const styles = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  return (\r\n    <Box display=\"flex\" className={styles.root}>\r\n      <CopyToClipboard\r\n        text={text}\r\n        onCopy={() => enqueueSnackbar(\"已复制!\", { autoHideDuration: 1500 })}\r\n      >\r\n        <Tooltip title=\"复制\">\r\n          <IconButton>\r\n            <FileCopyOutlined />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </CopyToClipboard>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n","import React from \"react\";\r\nimport { Tooltip, IconButton } from \"@material-ui/core\";\r\nimport { OpenInNew } from \"@material-ui/icons\";\r\n\r\nexport type OutLinkProps = {\r\n  href: string;\r\n  title?: Exclude<React.ReactNode, null | undefined>;\r\n};\r\n\r\nexport const OutLink: React.FC<OutLinkProps> = ({ href, title = \"\" }) => {\r\n  return (\r\n    <Tooltip title={title}>\r\n      <IconButton component=\"a\" href={href} target=\"_blank\">\r\n        <OpenInNew />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n","import React from 'react'\nimport {Box, Chip} from '@material-ui/core'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport type RegExpChipsProps = {\n  onSelect?: (data: {source: string, flags: string}) => void\n}\n\nexport const RegExpChips: React.FC<RegExpChipsProps> = ({onSelect}) => {\n  const styles = useStyles()\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" className={styles.tags}>\n      {REG_EXP_ARR.map(({ label, source }) => (\n        <Chip\n          key={label}\n          variant=\"outlined\"\n          label={label}\n          onClick={() => onSelect?.({ source, flags: \"\" })}\n        />\n      ))}\n    </Box>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  tags: {\n    \"& > *\": {\n      marginRight: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  },\n}))\n\nconst REG_EXP_ARR = [\n  {\n    label: \"身份证号\",\n    source: /^\\d{17}[0-9Xx]|\\d{15}$/.source,\n  },\n  {\n    label: \"Email地址\",\n    source: /^\\w[-\\w.+]*@([A-Za-z0-9][-A-Za-z0-9]+\\.)+[A-Za-z]{2,14}$/.source,\n  },\n  {\n    label: \"中文字符\",\n    source: /^[\\u4e00-\\u9fa5]+$/.source,\n  },\n  {\n    label: \"双字节字符(含汉字)\",\n    // eslint-disable-next-line no-control-regex\n    source: /^[^\\x00-\\xff]+$/.source,\n  },\n  {\n    label: \"时间(时:分:秒)\",\n    source: /^([01]?\\d|2[0-3]):[0-5]?\\d:[0-5]?\\d$/.source,\n  },\n  {\n    label: \"日期(年:月:日)\",\n    source: /^(([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))-02-29)$/\n      .source,\n  },\n  {\n    label: \"IPv4地址\",\n    source: /^\\d{0,3}\\.\\d{0,3}\\.\\d{0,3}\\.\\d{0,3}$/.source,\n  },\n  {\n    label: \"手机号\",\n    source: /^(13\\d|14[579]|15[^4\\D]|17[^49\\D]|18\\d)\\d{8}$/.source,\n  },\n];\n","import React, { useMemo, useState, useEffect } from 'react'\nimport { Box, TextField, Typography } from '@material-ui/core'\nimport { CodeBlock, CopyAction, OutLink } from 'components'\n\nexport type RegExpTestPanelProps = {\n  source: string\n  flags?: string\n}\n\nexport const RegExpTestPanel: React.FC<RegExpTestPanelProps> = ({ source, flags }) => {\n  const [text, setText] = useState('')\n  const { code1, result1, error1, code2, result2, error2 } = useMemo(() => {\n    let regexp, result1, result2, error1, error2\n    try {\n      regexp = new RegExp(source, flags)\n      result1 = regexp.test(text)\n      result2 = text.search(regexp)\n    } catch (error) {\n      regexp = `/${source}/${flags}`\n      error1 = error2 = error as Error\n    }\n    // 无论构建正则是否抛出异常，源码都要正确显示\n    const escapedText = text.replace(/'/g, \"\\\\'\")\n    const code1 = `const result = ${regexp}.test('${escapedText}');`\n    const code2 = `const result = '${escapedText}'.search(${regexp});`\n    return { code1, result1, error1, code2, result2, error2 }\n  }, [flags, source, text])\n\n  // 输出到控制台\n  useEffect(() => {\n    console.log(code1)\n    console.log(result1)\n    console.log(code2)\n    console.log(result2)\n  }, [code1, code2, result1, result2])\n\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box>\n        <TextField\n          variant=\"outlined\"\n          label=\"输入源文本\"\n          multiline\n          fullWidth\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </Box>\n      <Box overflow=\"auto\">\n        <Box mt={2} display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" bgcolor=\"rgb(246, 248, 250)\">\n          <Box flexGrow={1}>\n            <CodeBlock code={`${code1!}`} language=\"javascript\" />\n          </Box>\n          <Box display=\"flex\">\n            <OutLink\n              title=\"RegExp.prototype.test() - MDN\"\n              href={\n                'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test'\n              }\n            />\n            <CopyAction text={code1!} />\n          </Box>\n        </Box>\n        <Box>\n          {error1 ? (\n            <Typography color=\"error\">{String(error1)}</Typography>\n          ) : (\n            <CodeBlock code={'// result\\n' + result1} language=\"javascript\" />\n          )}\n        </Box>\n        <Box mt={2} display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" bgcolor=\"rgb(246, 248, 250)\">\n          <Box flexGrow={1}>\n            <CodeBlock code={`${code2!}`} language=\"javascript\" />\n          </Box>\n          <Box display=\"flex\">\n            <OutLink\n              title=\"String.prototype.search() - MDN\"\n              href={\n                'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/search'\n              }\n            />\n            <CopyAction text={code2!} />\n          </Box>\n        </Box>\n        <Box>\n          {error2 ? (\n            <Typography color=\"error\">{String(error2)}</Typography>\n          ) : (\n            <CodeBlock code={'// result\\n' + result2} language=\"javascript\" />\n          )}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport { Box, TextField, Typography } from '@material-ui/core'\r\nimport { CodeBlock, CopyAction, OutLink } from 'components'\r\n\r\nexport type RegExpMatchPanelProps = {\r\n  source: string\r\n  flags?: string\r\n}\r\n\r\nconst supportMatchAll = 'matchAll' in String.prototype\r\n\r\nexport const RegExpMatchPanel: React.FC<RegExpMatchPanelProps> = ({ source, flags }) => {\r\n  const [text, setText] = useState('')\r\n  const { code1, result1, error1, code2, result2, error2, code3, result3, error3 } = useMemo(() => {\r\n    let regexp, result1, result2, result3, error1, error2, error3\r\n    try {\r\n      // 抛出异常情况：\r\n      // 1. 正则表达式不合法\r\n      regexp = new RegExp(source, flags)\r\n    } catch (error) {\r\n      regexp = (`/${source}/${flags}` as any) as RegExp\r\n      error1 = error2 = error3 = error as Error\r\n    }\r\n\r\n    if (!error1) {\r\n      result1 = regexp.exec(text)\r\n      result2 = text.match(regexp)\r\n      try {\r\n        // 抛出异常的情况：\r\n        // 1. 浏览器不支持 matchAll 时抛异常\r\n        // 2. 正则的 g 标志位未设置时抛异常\r\n        result3 = text.matchAll(regexp)\r\n      } catch (error) {\r\n        error3 = error as Error\r\n      }\r\n    }\r\n    const escapedText = text.replace(/'/g, \"\\\\'\")\r\n    const code1 = `const result = ${regexp}.exec('${escapedText}');`\r\n    const code2 = `const result = '${escapedText}'.match(${regexp});`\r\n    const code3 = `const result = '${escapedText}'.matchAll(${regexp});`\r\n\r\n    return { code1, result1, error1, code2, result2, error2, code3, result3, error3 }\r\n  }, [flags, source, text])\r\n\r\n  // 输出到控制台\r\n  useEffect(() => {\r\n    console.log(code1)\r\n    console.log(result1)\r\n    console.log(code2)\r\n    console.log(result2)\r\n    console.log(code3)\r\n    console.log(result3)\r\n  }, [code1, code2, code3, result1, result2, result3])\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <Box>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"输入待匹配文本\"\r\n          multiline\r\n          fullWidth\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </Box>\r\n      <Box overflow=\"auto\">\r\n        <Box mt={2} display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" bgcolor=\"rgb(246, 248, 250)\">\r\n          <Box flexGrow={1}>\r\n            <CodeBlock code={`${code1!}`} language=\"javascript\" />\r\n          </Box>\r\n          <Box display=\"flex\">\r\n            <OutLink\r\n              title=\"RegExp.prototype.exec() - MDN\"\r\n              href={\r\n                'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec'\r\n              }\r\n            />\r\n            <CopyAction text={code1!} />\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          {error1 ? (\r\n            <Typography color=\"error\">{String(error1)}</Typography>\r\n          ) : (\r\n            <CodeBlock\r\n              code={'// result\\n' + stringifyRegExpExecArray(result1)}\r\n              language=\"javascript\"\r\n            />\r\n          )}\r\n        </Box>\r\n        <Box mt={2} display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" bgcolor=\"rgb(246, 248, 250)\">\r\n          <Box flexGrow={1}>\r\n            <CodeBlock code={`${code2!}`} language=\"javascript\" />\r\n          </Box>\r\n          <Box display=\"flex\">\r\n            <OutLink\r\n              title=\"String.prototype.match() - MDN\"\r\n              href={\r\n                'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match'\r\n              }\r\n            />\r\n            <CopyAction text={code2!} />\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          {error2 ? (\r\n            <Typography color=\"error\">{String(error2)}</Typography>\r\n          ) : (\r\n            <CodeBlock\r\n              code={'// result\\n' + stringifyRegExpMatchArray(result2)}\r\n              language=\"javascript\"\r\n            />\r\n          )}\r\n        </Box>\r\n        {supportMatchAll && (\r\n          <>\r\n            <Box\r\n              mt={2}\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexWrap=\"wrap\"\r\n              bgcolor=\"rgb(246, 248, 250)\"\r\n            >\r\n              <Box flexGrow={1}>\r\n                <CodeBlock code={`${code3!}`} language=\"javascript\" />\r\n              </Box>\r\n              <Box display=\"flex\">\r\n                <OutLink\r\n                  title=\"String.prototype.matchAll() - MDN\"\r\n                  href={\r\n                    'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll'\r\n                  }\r\n                />\r\n                <CopyAction text={code3!} />\r\n              </Box>\r\n            </Box>\r\n            <Box>\r\n              {error3 ? (\r\n                <Typography color=\"error\">{String(error3)}</Typography>\r\n              ) : (\r\n                <CodeBlock code={stringifyRegExpMatchAllResult(result3!)} language=\"javascript\" />\r\n              )}\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nfunction stringifyRegExpExecArray(result: RegExpExecArray | null | undefined): string {\r\n  if (!result) return JSON.stringify(result)\r\n  let str = '['\r\n  result.forEach((value, index) => (str += `\\n  ${index}: ${JSON.stringify(value)},`))\r\n  str += `\\n  index: ${JSON.stringify(result.index)}`\r\n  str += `\\n  input: ${JSON.stringify(result.input)}`\r\n  str += `\\n  groups: ${JSON.stringify(result.groups, null, 2)?.replace(/\\n/g, '\\n  ')},`\r\n  str += `\\n  length: ${JSON.stringify(result.length)}`\r\n  str += `\\n]`\r\n  return str\r\n}\r\n\r\nfunction stringifyRegExpMatchArray(result: RegExpMatchArray | null | undefined): string {\r\n  if (!result || 'index' in result) {\r\n    return stringifyRegExpExecArray(result as RegExpExecArray)\r\n  } else {\r\n    return JSON.stringify(result)\r\n  }\r\n}\r\n\r\nfunction stringifyRegExpMatchAllResult(result: IterableIterator<RegExpMatchArray>): string {\r\n  let str = ''\r\n  let item: IteratorResult<RegExpMatchArray, undefined>\r\n  do {\r\n    item = result.next()\r\n    str += `// result.next()\\n`\r\n    str += `{\r\n  value: ${stringifyRegExpMatchArray(item.value)?.replace(/\\n/g, '\\n  ')},\r\n  done: ${item.done}\r\n}\\n`\r\n  } while (!item.done)\r\n  return str\r\n}\r\n","import React, { useState, useMemo, useCallback } from 'react'\nimport PageLayout from 'layout/PageLayout'\nimport {\n  Select,\n  Input,\n  Box,\n  Tabs,\n  Tab,\n  useMediaQuery,\n  Checkbox,\n  FormControlLabel,\n  CardContent,\n  CardActions,\n  Card,\n  Collapse,\n  Button,\n  MenuItem,\n} from '@material-ui/core'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport { useQuery } from 'hooks'\nimport { ExpandMore } from '@material-ui/icons'\nimport clsx from 'clsx'\nimport { VisualRegExp, RegExpType, CodeBlock, CopyAction, OutLink } from 'components'\nimport { RegExpChips } from './RegExpChips'\nimport { RegExpTestPanel } from './RegExpTestPanel'\nimport { RegExpMatchPanel } from './RegExpMatchPanel'\nimport { RegExpReplacePanel } from './RegExpReplacePanel'\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    codeFontFamily: string\n  }\n}\n\nenum Language {\n  JavaScript = 'JavaScript',\n}\n\nenum TabIndex {\n  TEST,\n  MATCH,\n  REPLACE,\n  COMMONLY_USED_REGEXP,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  regexpInput: {\n    fontSize: '1.4em',\n    fontFamily: theme.codeFontFamily,\n  },\n  code: {\n    fontFamily: theme.codeFontFamily,\n  },\n  tags: {\n    '& > *': {\n      marginRight: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n}))\n\ntype PanelProps = {\n  regexp: RegExpType\n  value: string\n  onChange: (newValue: string) => void\n}\n\n\nconst TabPanel: React.FC<{ id: number; value: number }> = ({ children, id, value, ...props }) => {\n  return <Box {...props}>{id === value && <Box pt={3}>{children}</Box>}</Box>\n}\n\nconst flagItems = [\n  {\n    flag: 'g',\n    label: '全局匹配',\n  },\n  {\n    flag: 'i',\n    label: '忽略大小写',\n  },\n  {\n    flag: 'm',\n    label: '多行匹配',\n  },\n] as const\n\nconst useRegExp = () => {\n  const [query, setQuery] = useQuery()\n  const source = query.source || ''\n  const flags = query.flags || ''\n  const regexp: RegExpType = { source, flags }\n  const setRegExp = useCallback(\n    (regexp: RegExpType) => {\n      setQuery({ ...query, ...regexp })\n    },\n    [query, setQuery]\n  )\n  return [regexp, setRegExp] as const\n}\n\nconst useTabIndex = (defaultValue: number = TabIndex.TEST) => {\n  const [query, setQuery] = useQuery()\n  const tabIndex = parseInt(query.tab ?? defaultValue)\n  const setTabIndex = useCallback(\n    (tabIndex: number) => {\n      setQuery({ ...query, tab: String(tabIndex) })\n    },\n    [query, setQuery]\n  )\n  return [tabIndex, setTabIndex] as const\n\n}\n\nconst RegExpPage: React.FC = () => {\n  const styles = useStyles()\n  const [tabIndex, setTabIndex] = useTabIndex(TabIndex.TEST);\n  const [regexp, setRegexp] = useRegExp()\n  const [text] = useState('')\n  const [newText] = useState('')\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.down('sm'))\n  const [expanded, setExpanded] = useState(false)\n  const [language, setLanguage] = useState(Language.JavaScript)\n\n  // 单个标志位变化\n  const onFlagChange = (flag: 'g' | 'i' | 'm', checked: boolean) => {\n    let newFlags = regexp.flags.replace(new RegExp(flag, 'g'), '')\n    newFlags += checked ? flag : ''\n    setRegexp({ ...regexp, flags: newFlags })\n  }\n\n  // 一组标志位变化\n  const onFlagsChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    let newFlags = e.target.value\n    // 去除无效标志位\n    newFlags = newFlags.replace(/[^gim]/, '')\n    // 去重\n    'gim'.split('').forEach((flag) => {\n      if (newFlags.includes(flag)) {\n        newFlags = newFlags.replace(new RegExp(flag, 'g'), '') + flag\n      }\n    })\n    setRegexp({ ...regexp, flags: newFlags })\n  }\n\n  const separator = (\n    <Box pt=\"6px\" pb=\"7px\" color=\"primary.main\">\n      /\n    </Box>\n  )\n\n  const code = useMemo(() => {\n    let code = ''\n    if (!expanded) return code\n    if (tabIndex === TabIndex.TEST) {\n      code = `const str = \"${text}\";\n/${regexp.source}/${regexp.flags}.test(str)`\n    } else if (tabIndex === TabIndex.MATCH) {\n      code = `const str = \"${text}\";\n/${regexp.source}/${regexp.flags}.exec(str)`\n    } else if (tabIndex === TabIndex.REPLACE) {\n      code = `const str = \"${text}\";\nstr.replace(/${regexp.source}/${regexp.flags}, \"${newText}\")`\n    }\n    return code\n  }, [expanded, newText, regexp, tabIndex, text])\n  return (\n    <PageLayout title=\"正则表达式\">\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Box display=\"flex\">\n          <Box flexGrow={{ xs: 2, md: 4 }} flexBasis={0}>\n            <Input\n              className={styles.regexpInput}\n              startAdornment={separator}\n              placeholder=\"pattern\"\n              fullWidth\n              value={regexp.source}\n              onChange={(e) => setRegexp({ ...regexp, source: e.target.value })}\n            />\n          </Box>\n          <Box flexGrow={{ xs: 1, md: 1 }} flexBasis={0}>\n            <Input\n              className={styles.regexpInput}\n              startAdornment={separator}\n              placeholder=\"flags\"\n              fullWidth\n              value={regexp.flags}\n              onChange={onFlagsChange}\n            />\n          </Box>\n        </Box>\n\n        <Box display=\"flex\" mt={1} flexWrap=\"wrap\">\n          {flagItems.map((item) => (\n            <FormControlLabel\n              key={item.flag}\n              control={\n                <Checkbox\n                  checked={regexp.flags.includes(item.flag)}\n                  onChange={(_, checked) => onFlagChange(item.flag, checked)}\n                  color=\"primary\"\n                />\n              }\n              label={item.label}\n            />\n          ))}\n          <Box flexGrow={1} display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\" mr={1}>\n            <OutLink\n              title=\"RegExp - MDN\"\n              href={\n                'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp'\n              }\n            />\n            <OutLink\n              title=\"Regular expressions - MDN\"\n              href={\n                'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions'\n              }\n            />\n            <CopyAction text={`/${regexp.source}/${regexp.flags}`} />\n          </Box>\n        </Box>\n\n        <Box mt={1}>\n          <VisualRegExp regexp={regexp} />\n          {/* <Tooltip title=\"分享\" arrow placement=\"top\">\n            <CopyToClipboard\n              text={href || \"\"}\n              onCopy={() =>\n                enqueueSnackbar(\n                  <span>\n                    <a\n                      href={href}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      style={{ color: \"white\" }}\n                    >\n                      {href}\n                    </a>{\" \"}\n                    已复制，快去分享吧！\n                  </span>\n                )\n              }\n            >\n              <IconButton>\n                <Share />\n              </IconButton>\n            </CopyToClipboard>\n          </Tooltip> */}\n        </Box>\n\n        <Box mt={2}>\n          <Tabs\n            value={tabIndex}\n            onChange={(_, value) => setTabIndex(value)}\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n            variant={matches ? 'fullWidth' : 'standard'}\n          >\n            <Tab label=\"测试\"></Tab>\n            <Tab label=\"匹配\"></Tab>\n            <Tab label=\"替换\"></Tab>\n            <Tab label=\"常用正则\"></Tab>\n          </Tabs>\n          <TabPanel id={TabIndex.TEST} value={tabIndex}>\n            <RegExpTestPanel source={regexp.source} flags={regexp.flags} />\n          </TabPanel>\n          <TabPanel id={TabIndex.MATCH} value={tabIndex}>\n            <RegExpMatchPanel source={regexp.source} flags={regexp.flags} />\n          </TabPanel>\n          <TabPanel id={TabIndex.REPLACE} value={tabIndex}>\n            <RegExpReplacePanel source={regexp.source} flags={regexp.flags} />\n          </TabPanel>\n          <TabPanel id={TabIndex.COMMONLY_USED_REGEXP} value={tabIndex}>\n            <RegExpChips onSelect={(regexp) => setRegexp(regexp)} />\n          </TabPanel>\n        </Box>\n      </Box>\n\n      {/* 测试/匹配/替换 */}\n      <Box my={2} display=\"none\">\n        <Card>\n          <CardContent></CardContent>\n          <CardActions>\n            {expanded && (\n              <Box ml={1}>\n                <Select value={language} onChange={(e) => setLanguage(e.target.value as Language)}>\n                  <MenuItem value={Language.JavaScript}>JavaScript</MenuItem>\n                </Select>\n              </Box>\n            )}\n            <Button\n              style={{ marginLeft: 'auto' }}\n              endIcon={\n                <ExpandMore\n                  className={clsx(styles.expand, {\n                    [styles.expandOpen]: expanded,\n                  })}\n                />\n              }\n              onClick={() => setExpanded(!expanded)}\n            >\n              生成代码\n            </Button>\n          </CardActions>\n          {/* 生成代码 */}\n          <Collapse in={expanded}>\n            <CardContent>\n              <CodeBlock code={code} language=\"javascript\" />\n            </CardContent>\n            <CardActions>\n              <CopyAction text={code} />\n            </CardActions>\n          </Collapse>\n        </Card>\n      </Box>\n    </PageLayout>\n  )\n}\n\nexport default RegExpPage\n","import React, { useMemo, useState, useEffect, Fragment } from 'react'\nimport {\n  Box,\n  TextField,\n  Typography,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  FormLabel,\n  FormControlLabel,\n  Switch,\n} from '@material-ui/core'\nimport { CodeBlock, CopyAction, OutLink } from 'components'\nimport { escape } from 'utils'\nimport _ from 'lodash'\n\nexport type RegExpReplacePanelProps = {\n  source: string\n  flags?: string\n}\n\nconst quote = '`'\n\nexport const RegExpReplacePanel: React.FC<RegExpReplacePanelProps> = ({ source, flags }) => {\n  const [text, setText] = useState('')\n  const [replacer, setReplacer] = useState('')\n  const [isReplacerInfoVisible, setIsReplacerInfoVisible] = useState(false)\n  const [isReplacerStr, setIsReplaceStr] = useState(true)\n  const { code1, result1, error1, matches } = useMemo(() => {\n    let regexp, result1, error1\n    let matches: RegExpExecArray[] = []\n    // String.prototype.replace() 的第二参数的字面值(显示给用户)\n    let replacerLiteral = ''\n    try {\n      regexp = new RegExp(source, flags)\n\n      // 搜集匹配结果\n      // 获取 String.prototype.replace(regexp, newStr) 中第二个参数可使用的特殊替换模式\n      // RegExp.prototype.exec 和 String.prototype.replace 执行结果的 match 对象一致，\n      // 使用 exec 的执行结果代表 replace 的结果\n      // $$ 表示\"$\"\n      // $& 表示匹配的子串\n      // $` 表示匹配的子串之前的部分\n      // $' 表示匹配的子串之后的部分\n      // $n 表示第 n 个捕获组，索引从 1 开始\n      // const matches: RegExpExecArray[] = []\n      if (regexp.global) {\n        let match\n        while ((match = regexp.exec(text))) {\n          matches.push(match)\n        }\n      } else {\n        const match = regexp.exec(text)\n        if (match) {\n          matches.push(match)\n        }\n      }\n\n      // String.prototype.replace() 的第二参数\n      let _replacer: string | Function = ''\n      if (isReplacerStr) {\n        replacerLiteral = `${quote}${escape(replacer, quote)}${quote}`\n        _replacer = replacer.replace(/\\\\n/g, '\\n')\n      } else {\n        const groupsLiteral =\n          matches.length > 0 ? matches[0].filter((v, i) => i > 0).reduce((str, b, n) => str + `, p${n + 1}`, '') : ''\n        const indent = (source: string) => source.replace(/(^|\\n)/g, '$&  ')\n        replacerLiteral = `function replacer(match${groupsLiteral}, offset, input) {\\n${indent(\n          replacer\n        )}\\n}`\n        // eslint-disable-next-line no-new-func\n        _replacer = new Function(`return ${replacerLiteral}`)()\n      }\n      // 执行替换\n      result1 = text.replace(regexp, _replacer as any)\n    } catch (error) {\n      console.error(error)\n      regexp = `/${source}/${flags}`\n      error1 = error as Error\n    }\n    // 无论构建正则是否抛出异常，源码都要正确显示\n    const code1 = `${quote}${escape(text, quote)}${quote}.replace(${regexp}, ${replacerLiteral});`\n    return { code1, result1, error1, matches }\n  }, [flags, isReplacerStr, replacer, source, text])\n\n  // 输出到控制台\n  useEffect(() => {\n    console.log(code1)\n    console.log(result1)\n  }, [code1, result1])\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box>\n        <TextField\n          variant=\"outlined\"\n          label=\"源字符串\"\n          multiline\n          fullWidth\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </Box>\n      <Box mt={1}>\n        <TextField\n          variant=\"outlined\"\n          label={isReplacerStr ? \"替换子串\" : \"替换函数\"}\n          placeholder={isReplacerStr ? \"输入子串，支持 $$, $&, $`, $', $n 等特殊替换符\" : '输入替换函数的内容'}\n          multiline\n          fullWidth\n          value={replacer}\n          onChange={(e) => setReplacer(e.target.value)}\n        />\n      </Box>\n      <Box mt={1} display=\"flex\" flexWrap=\"wrap\">\n        <Box>\n          <FormLabel>替换类型：</FormLabel>\n          <FormControlLabel\n            control={\n              <Switch\n                color=\"primary\"\n                checked={isReplacerStr}\n                onChange={(_, checked) => setIsReplaceStr(checked)}\n              />\n            }\n            label={isReplacerStr ? '字符串' : '函数'}\n          />\n        </Box>\n        <Box>\n          <FormLabel>替换信息：</FormLabel>\n          <FormControlLabel\n            control={\n              <Switch\n                color=\"primary\"\n                checked={isReplacerInfoVisible}\n                onChange={(_, checked) => setIsReplacerInfoVisible(checked)}\n              />\n            }\n            label={isReplacerInfoVisible ? '显示' : '隐藏'}\n          />\n        </Box>\n      </Box>\n      {isReplacerInfoVisible && (\n        <Box mt={1}>\n          {isReplacerStr ? (\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Replacer Patterns</TableCell>\n                  <TableCell>Inserts</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell>\n                    <CodeBlock language=\"javascript\">\n                      {quote}$${quote}\n                    </CodeBlock>\n                  </TableCell>\n                  <TableCell>\n                    <CodeBlock language=\"javascript\">\n                      {quote}${quote}\n                    </CodeBlock>\n                  </TableCell>\n                </TableRow>\n                {matches\n                  .map((match) => {\n                    const result: Record<string, string> = {\n                      '$&': match[0],\n                      '$`': text.substring(0, match.index),\n                      \"$'\": text.substring(match.index + match[0].length),\n                    }\n                    for (let i = 1; i < match.length; ++i) {\n                      result['$' + i] = match[i]\n                    }\n                    return result\n                  })\n                  .map((patterns, i) => {\n                    return (\n                      <Fragment key={i}>\n                        <TableRow>\n                          <TableCell>\n                            <strong>Group #{i + 1}</strong>\n                          </TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                        {Object.keys(patterns).map((key) => (\n                          <TableRow key={key}>\n                            <TableCell>\n                              <CodeBlock language=\"javascript\">\n                                {quote + escape(key, quote) + quote}\n                              </CodeBlock>\n                            </TableCell>\n                            <TableCell>\n                              <CodeBlock language=\"javascript\">\n                                {quote + escape(patterns[key], quote) + quote}\n                              </CodeBlock>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </Fragment>\n                    )\n                  })}\n              </TableBody>\n            </Table>\n          ) : (\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Replacer Parameters</TableCell>\n                  <TableCell>Values</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {matches.map((match) => {\n                  const result: Record<string, string | number> = {}\n                  result['match'] = match[0]\n                  for (let i = 1; i < match.length; ++i) {\n                    result['p' + i] = match[i]\n                  }\n                  result['offset'] = match.index\n                  result['input'] = match.input\n                  return result\n                }).map((record, i) => {\n                  return (\n                    <Fragment key={i}>\n                      <TableRow>\n                        <TableCell>\n                          <strong>Group #{i + 1}</strong>\n                        </TableCell>\n                        <TableCell></TableCell>\n                      </TableRow>\n                      {_.map(record, (value, key) => (\n                        <TableRow key={key}>\n                          <TableCell>\n                            <CodeBlock language=\"javascript\">\n                              {key}\n                            </CodeBlock>\n                          </TableCell>\n                          <TableCell>\n                            <CodeBlock language=\"javascript\">\n                              {_.isNumber(value) ? String(value) : (quote + escape(value, quote) + quote)}\n                            </CodeBlock>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </Fragment>\n                  )\n                })}\n              </TableBody>\n            </Table>\n          )}\n        </Box>\n      )}\n      <Box overflow=\"auto\">\n        <Box mt={2} display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" bgcolor=\"rgb(246, 248, 250)\">\n          <Box flexGrow={1}>\n            <CodeBlock code={code1!} language=\"javascript\" />\n          </Box>\n          <Box display=\"flex\">\n            <OutLink\n              title=\"RegExp.prototype.replace() - MDN\"\n              href={\n                'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace'\n              }\n            />\n            <CopyAction text={code1!} />\n          </Box>\n        </Box>\n        <Box>\n          {error1 ? (\n            <Typography color=\"error\">{String(error1)}</Typography>\n          ) : (\n            <CodeBlock\n              code={`// --- output ---\\n\\`${result1?.replace(/`/g, '\\\\`')}\\``}\n              language=\"javascript\"\n            />\n          )}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n"],"sourceRoot":""}