{"version":3,"sources":["pages/RegExpPage/index.tsx","components/VisualRegExp.tsx","hooks/useRegulex.ts","components/CodeBlock.tsx","pages/RegExpPage/RegExpChips.tsx","pages/RegExpPage/RegExpTestPanel.tsx","hooks/useQuery.ts","utils/index.ts"],"names":["Language","TabIndex","useStyles","makeStyles","theme","regexpContainer","width","overflow","textAlign","error","color","VisualRegExp","regexp","boxProps","containerRef","useRef","styles","regulex","useAsync","a","Promise","resolve","reject","script","document","createElement","src","process","onload","window","require","onerror","Error","body","appendChild","value","useState","setError","useEffect","current","innerHTML","parse","visualize","paper","Raphael","source","flags","undefined","err","_err","RegexSyntaxError","msg","message","lastIndex","push","repeat","join","Box","Typography","className","component","ref","style","height","CodeBlock","code","language","defaultProps","githubTheme","tokens","getLineProps","getTokenProps","lineHeight","py","px","margin","map","line","i","key","token","RegExpChips","onSelect","display","flexWrap","tags","REG_EXP_ARR","label","Chip","variant","onClick","marginRight","spacing","marginBottom","RegExpTestPanel","text","setText","useMemo","RegExp","matched","test","replace","enqueueSnackbar","useSnackbar","flexDirection","TextField","multiline","fullWidth","onChange","e","target","mt","alignItems","flexGrow","onCopy","autoHideDuration","Tooltip","title","placement","IconButton","FileCopyOutlined","regexpInput","fontSize","fontFamily","codeFontFamily","expand","transform","transition","transitions","create","duration","shortest","expandOpen","NameValue","name","whiteSpace","wordBreak","TabPanel","children","id","props","pt","RegExpMatchPanel","isEmpty","matches","exec","grey","red","green","group","n","RegExpReplacePanel","newValue","onNewValueChange","jsRegExp","newSubText","console","log","input","substring","index","length","flagItems","flag","useRegExp","useLocation","pathname","search","history","useHistory","searchParams","URLSearchParams","query","useCallback","toString","useQuery","setQuery","RegExpPage","TEST","tabIndex","setTabIndex","setRegexp","newText","setNewText","useTheme","useMediaQuery","breakpoints","down","expanded","setExpanded","JavaScript","setLanguage","separator","pb","MATCH","REPLACE","PageLayout","xs","md","flexBasis","Input","startAdornment","placeholder","newFlags","split","forEach","includes","item","FormControlLabel","control","Checkbox","checked","_","onFlagChange","justifyContent","mr","href","HelpOutline","textArea","position","visibility","focus","select","execCommand","removeChild","warn","copyToClipboard","Tabs","textColor","indicatorColor","Tab","COMMONLY_USED_REGEXP","my","Card","CardContent","CardActions","ml","Select","MenuItem","Button","marginLeft","endIcon","ExpandMore","clsx","Collapse","in","FileCopy"],"mappings":"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","file":"static/js/6.5f771550.chunk.js","sourcesContent":["import React, { useState, useMemo, useCallback } from \"react\";\nimport PageLayout from \"layout/PageLayout\";\nimport {\n  Select,\n  TextField,\n  Input,\n  Box,\n  Tabs,\n  Tab,\n  useMediaQuery,\n  Checkbox,\n  FormControlLabel,\n  CardContent,\n  CardActions,\n  Card,\n  IconButton,\n  Tooltip,\n  Collapse,\n  Button,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { green, red, grey } from \"@material-ui/core/colors\";\nimport { useQuery } from \"hooks\";\nimport { debugErr } from \"utils\";\nimport { useSnackbar } from \"notistack\";\nimport { FileCopy, ExpandMore, FileCopyOutlined, HelpOutline } from \"@material-ui/icons\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport clsx from \"clsx\";\nimport { VisualRegExp, RegExpType, CodeBlock } from \"components\";\nimport { copyToClipboard } from \"utils\";\nimport { RegExpChips } from \"./RegExpChips\";\nimport {RegExpTestPanel} from './RegExpTestPanel'\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n  interface Theme {\n    codeFontFamily: string;\n  }\n}\n\nenum Language {\n  JavaScript = \"JavaScript\",\n}\n\nenum TabIndex {\n  TEST,\n  MATCH,\n  REPLACE,\n  COMMONLY_USED_REGEXP,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  regexpInput: {\n    fontSize: 20,\n    fontFamily: theme.codeFontFamily,\n  },\n  code: {\n    fontFamily: theme.codeFontFamily,\n  },\n  tags: {\n    \"& > *\": {\n      marginRight: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n}));\n\ntype PanelProps = {\n  regexp: RegExpType;\n  value: string;\n  onChange: (newValue: string) => void;\n};\n\nconst NameValue: React.FC<{ name: string; value: React.ReactNode }> = ({\n  name,\n  value,\n}) => {\n  const styles = useStyles();\n  return (\n    <Box display=\"flex\" className={styles.code} mt={1}>\n      <Box whiteSpace=\"nowrap\">{name}:&nbsp;</Box>\n      <Box style={{ wordBreak: \"break-all\" }}>{value}</Box>\n    </Box>\n  );\n};\n\nconst TabPanel: React.FC<{ id: number; value: number }> = ({\n  children,\n  id,\n  value,\n  ...props\n}) => {\n  return <Box {...props}>{id === value && <Box pt={3}>{children}</Box>}</Box>;\n};\n\nconst RegExpMatchPanel: React.FC<PanelProps> = ({\n  regexp,\n  value,\n  onChange,\n}) => {\n  const isEmpty = !value || !regexp.source;\n  const matches = useMemo(() => {\n    if (isEmpty) return null;\n\n    let jsRegExp;\n    try {\n      jsRegExp = new RegExp(regexp.source, regexp.flags);\n      return jsRegExp.exec(value);\n    } catch (err) {\n      debugErr(err);\n      return null;\n    }\n  }, [isEmpty, regexp, value]);\n  return (\n    <>\n      <Box>\n        <TextField\n          variant=\"outlined\"\n          label=\"输入源文本\"\n          multiline\n          fullWidth\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n        />\n      </Box>\n      <Box mt={2}>\n        {isEmpty && <Box color={grey[500]}>--</Box>}\n        {!isEmpty && matches === null && <Box color={red[500]}>不匹配!</Box>}\n        {!isEmpty && matches !== null && (\n          <Box>\n            <Box color={green[500]}>匹配!</Box>\n            <Box style={{ overflow: \"auto\" }}>\n              {matches.map((group, n) => (\n                <NameValue name={`分组 #${n}`} value={group} />\n              ))}\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </>\n  );\n};\n\ntype RegExpReplacePanelProps = PanelProps & {\n  newValue: string;\n  onNewValueChange: (newValue: string) => void;\n};\nconst RegExpReplacePanel: React.FC<RegExpReplacePanelProps> = ({\n  regexp,\n  value,\n  onChange,\n  newValue,\n  onNewValueChange,\n}) => {\n  const [newSubText, matches] = useMemo(() => {\n    let jsRegExp;\n    try {\n      jsRegExp = new RegExp(regexp.source, regexp.flags);\n    } catch (err) {\n      debugErr(err);\n      return [\"\", null];\n    }\n    const newSubText = value.replace(jsRegExp, newValue);\n    const matches = jsRegExp.exec(value);\n    console.log(\"matches:\", matches);\n    return [newSubText, matches];\n  }, [regexp.flags, regexp.source, newValue, value]);\n  return (\n    <>\n      <Box>\n        <TextField\n          variant=\"outlined\"\n          label=\"输入源文本\"\n          multiline\n          fullWidth\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n        />\n      </Box>\n      {matches !== null && (\n        <Box mt={2}>\n          <NameValue name=\"$$\" value=\"$\" />\n          <NameValue name=\"$&\" value={matches[0]} />\n          <NameValue\n            name=\"$`\"\n            value={matches.input.substring(0, matches.index)}\n          />\n          <NameValue\n            name=\"$'\"\n            value={matches.input.substring(matches.index + matches[0].length)}\n          />\n          {matches.map((group, n) =>\n            n >= 1 ? <NameValue name={\"$\" + n} value={group} /> : null\n          )}\n        </Box>\n      )}\n      <Box mt={2}>\n        <TextField\n          variant=\"outlined\"\n          label=\"输入替换文本\"\n          multiline\n          fullWidth\n          value={newValue}\n          onChange={(e) => onNewValueChange(e.target.value)}\n        />\n      </Box>\n      <Box mt={2}>\n        <Box>{newSubText}</Box>\n      </Box>\n    </>\n  );\n};\n\nconst flagItems = [\n  {\n    flag: \"g\",\n    label: \"全局匹配\",\n  },\n  {\n    flag: \"i\",\n    label: \"忽略大小写\",\n  },\n  {\n    flag: \"m\",\n    label: \"多行匹配\",\n  },\n] as const;\n\nconst useRegExp = () => {\n  const [query, setQuery] = useQuery();\n  const source = query.source || \"\";\n  const flags = query.flags || \"\";\n  const regexp: RegExpType = { source, flags };\n  const setRegExp = useCallback(\n    (regexp: RegExpType) => {\n      setQuery(regexp);\n    },\n    [setQuery]\n  );\n  return [regexp, setRegExp] as const;\n};\n\nconst RegExpPage: React.FC = () => {\n  const styles = useStyles();\n  const [tabIndex, setTabIndex] = useState(TabIndex.TEST);\n  const [regexp, setRegexp] = useRegExp();\n  const [text, setText] = useState(\"\");\n  const [newText, setNewText] = useState(\"\");\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [expanded, setExpanded] = useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const [language, setLanguage] = useState(Language.JavaScript);\n\n  // 单个标志位变化\n  const onFlagChange = (flag: \"g\" | \"i\" | \"m\", checked: boolean) => {\n    let newFlags = regexp.flags.replace(new RegExp(flag, \"g\"), \"\");\n    newFlags += checked ? flag : \"\";\n    setRegexp({ ...regexp, flags: newFlags });\n  };\n\n  // 一组标志位变化\n  const onFlagsChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    let newFlags = e.target.value;\n    // 去除无效标志位\n    newFlags = newFlags.replace(/[^gim]/, \"\");\n    // 去重\n    \"gim\".split(\"\").forEach((flag) => {\n      if (newFlags.includes(flag)) {\n        newFlags = newFlags.replace(new RegExp(flag, \"g\"), \"\") + flag;\n      }\n    });\n    setRegexp({ ...regexp, flags: newFlags });\n  };\n\n  const separator = (\n    <Box pt=\"6px\" pb=\"7px\" color=\"primary.main\">\n      /\n    </Box>\n  );\n\n  const code = useMemo(() => {\n    let code = \"\";\n    if (!expanded) return code;\n    if (tabIndex === TabIndex.TEST) {\n      code = `const str = \"${text}\";\n/${regexp.source}/${regexp.flags}.test(str)`;\n    } else if (tabIndex === TabIndex.MATCH) {\n      code = `const str = \"${text}\";\n/${regexp.source}/${regexp.flags}.exec(str)`;\n    } else if (tabIndex === TabIndex.REPLACE) {\n      code = `const str = \"${text}\";\nstr.replace(/${regexp.source}/${regexp.flags}, \"${newText}\")`;\n    }\n    return code;\n  }, [expanded, newText, regexp, tabIndex, text]);\n  return (\n    <PageLayout title=\"正则表达式\">\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Box display=\"flex\">\n          <Box flexGrow={{ xs: 2, md: 4 }} flexBasis={0}>\n            <Input\n              className={styles.regexpInput}\n              startAdornment={separator}\n              placeholder=\"pattern\"\n              fullWidth\n              value={regexp.source}\n              onChange={(e) => setRegexp({ ...regexp, source: e.target.value })}\n            />\n          </Box>\n          <Box flexGrow={{ xs: 1, md: 1 }} flexBasis={0}>\n            <Input\n              className={styles.regexpInput}\n              startAdornment={separator}\n              placeholder=\"flags\"\n              fullWidth\n              value={regexp.flags}\n              onChange={onFlagsChange}\n            />\n          </Box>\n        </Box>\n\n        <Box display=\"flex\" mt={1} flexWrap=\"wrap\">\n          {flagItems.map((item) => (\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={regexp.flags.includes(item.flag)}\n                  onChange={(_, checked) => onFlagChange(item.flag, checked)}\n                  color=\"primary\"\n                />\n              }\n              label={item.label}\n            />\n          ))}\n          <Box\n            flexGrow={1}\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            mr={1}\n          >\n            <Tooltip title={`帮助`}>\n              <IconButton\n                onClick={() => { }}\n                component=\"a\"\n                href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\"\n                target=\"_blank\"\n              >\n                <HelpOutline />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={`复制`}>\n              <IconButton\n                onClick={() => {\n                  if (copyToClipboard(`/${regexp.source}/${regexp.flags}`)) {\n                    enqueueSnackbar(<span>已复制!</span>);\n                  }\n                }}\n              >\n                <FileCopyOutlined />\n              </IconButton>\n            </Tooltip>\n          </Box>\n        </Box>\n\n        <Box mt={1}>\n          <VisualRegExp regexp={regexp} />\n          {/* <Tooltip title=\"分享\" arrow placement=\"top\">\n            <CopyToClipboard\n              text={href || \"\"}\n              onCopy={() =>\n                enqueueSnackbar(\n                  <span>\n                    <a\n                      href={href}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      style={{ color: \"white\" }}\n                    >\n                      {href}\n                    </a>{\" \"}\n                    已复制，快去分享吧！\n                  </span>\n                )\n              }\n            >\n              <IconButton>\n                <Share />\n              </IconButton>\n            </CopyToClipboard>\n          </Tooltip> */}\n        </Box>\n\n        <Box mt={2}>\n          <Tabs\n            value={tabIndex}\n            onChange={(_, value) => setTabIndex(value as number)}\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n            variant={matches ? \"fullWidth\" : \"standard\"}\n          >\n            <Tab label=\"测试\"></Tab>\n            <Tab label=\"匹配\"></Tab>\n            <Tab label=\"替换\"></Tab>\n            <Tab label=\"常用正则\"></Tab>\n          </Tabs>\n          <TabPanel id={TabIndex.TEST} value={tabIndex}>\n            <RegExpTestPanel source={regexp.source} flags={regexp.flags} />\n          </TabPanel>\n          <TabPanel id={TabIndex.MATCH} value={tabIndex}>\n            <RegExpMatchPanel regexp={regexp} value={text} onChange={setText} />\n          </TabPanel>\n          <TabPanel id={TabIndex.REPLACE} value={tabIndex}>\n            <RegExpReplacePanel\n              regexp={regexp}\n              value={text}\n              onChange={setText}\n              newValue={newText}\n              onNewValueChange={setNewText}\n            />\n          </TabPanel>\n          <TabPanel id={TabIndex.COMMONLY_USED_REGEXP} value={tabIndex}>\n            <RegExpChips onSelect={(regexp) => setRegexp(regexp)} />\n          </TabPanel>\n        </Box>\n      </Box>\n\n      {/* 测试/匹配/替换 */}\n      <Box my={2} display=\"none\">\n        <Card>\n          <CardContent></CardContent>\n          <CardActions>\n            {expanded && (\n              <Box ml={1}>\n                <Select\n                  value={language}\n                  onChange={(e) => setLanguage(e.target.value as Language)}\n                >\n                  <MenuItem value={Language.JavaScript}>JavaScript</MenuItem>\n                </Select>\n              </Box>\n            )}\n            <Button\n              style={{ marginLeft: \"auto\" }}\n              endIcon={\n                <ExpandMore\n                  className={clsx(styles.expand, {\n                    [styles.expandOpen]: expanded,\n                  })}\n                />\n              }\n              onClick={() => setExpanded(!expanded)}\n            >\n              生成代码\n            </Button>\n          </CardActions>\n          {/* 生成代码 */}\n          <Collapse in={expanded}>\n            <CardContent>\n              <CodeBlock code={code} language=\"javascript\" />\n            </CardContent>\n            <CardActions>\n              <CopyToClipboard\n                text={code}\n                onCopy={() =>\n                  enqueueSnackbar(\"已复制!\", { autoHideDuration: 1500 })\n                }\n              >\n                <Tooltip title=\"复制\" placement=\"top\">\n                  <IconButton>\n                    <FileCopy />\n                  </IconButton>\n                </Tooltip>\n              </CopyToClipboard>\n            </CardActions>\n          </Collapse>\n        </Card>\n      </Box>\n    </PageLayout>\n  );\n};\n\nexport default RegExpPage;\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { useRegulex } from 'hooks';\r\nimport { debugErr } from 'utils';\r\nimport { Typography, BoxProps, Box } from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  regexpContainer: {\r\n    width: \"100%\",\r\n    overflow: \"auto\",\r\n    textAlign: \"center\"\r\n  },\r\n  error: {\r\n    width: \"100%\",\r\n    color: \"red\",\r\n    overflow: \"auto\"\r\n  }\r\n}));\r\n\r\nexport type RegExpType = {\r\n  source: string;\r\n  flags: string;\r\n};\r\n\r\nexport type VisualRegExpProps = {\r\n  regexp: RegExpType\r\n} & BoxProps\r\n\r\nexport const VisualRegExp: React.FC<VisualRegExpProps> = ({ regexp, ...boxProps}) => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const styles = useStyles();\r\n  const { value: regulex } = useRegulex();\r\n  const [error, setError] = useState<Error>();\r\n  useEffect(() => {\r\n    if (!regulex || !containerRef.current) return;\r\n\r\n    // 清除生成的图片\r\n    containerRef.current.innerHTML = \"\";\r\n\r\n    const { parse, visualize, Raphael } = regulex;\r\n    var paper = Raphael(containerRef.current, 0, 0);\r\n    try {\r\n      // 重新生成图片\r\n      visualize(parse(regexp.source), regexp.flags, paper);\r\n      // 重置错误\r\n      setError(undefined);\r\n    } catch (err) {\r\n      let _err = err;\r\n      // 如果是语法错误，格式化错误\r\n      if (err instanceof parse.RegexSyntaxError) {\r\n        var msg = [\"Error:\" + err.message, \"\"];\r\n        if (typeof err.lastIndex === \"number\") {\r\n          msg.push(regexp.source);\r\n          msg.push(\"-\".repeat(err.lastIndex) + \"^\");\r\n        }\r\n        _err = new Error(msg.join(\"\\n\"));\r\n      }\r\n      setError(_err);\r\n      debugErr(_err);\r\n    }\r\n  }, [regexp, regulex]);\r\n  return (\r\n    <Box {...boxProps}>\r\n      {error && (\r\n        <Typography className={styles.error} component=\"pre\">\r\n          <code>{error.message}</code>\r\n        </Typography>\r\n      )}\r\n      <div\r\n        ref={containerRef}\r\n        className={styles.regexpContainer}\r\n        style={{ height: error ? 0 : \"auto\" }}\r\n      />\r\n    </Box>\r\n  );\r\n};","import { useAsync } from \"react-use\";\n\nexport default function useRegulex() {\n  return useAsync(async () => {\n    return new Promise<any>((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.src = process.env.PUBLIC_URL + \"/regulex.js\";\n      script.onload = () => {\n        const regulex = window.require(\"regulex\");\n        resolve(regulex);\n      };\n      script.onerror = () => {\n        reject(new Error(\"load regulex error!\"));\n      };\n      document.body.appendChild(script);\n    });\n  });\n}\n","import React from \"react\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport githubTheme from \"prism-react-renderer/themes/github\";\nimport { Box } from \"@material-ui/core\";\n\nexport type Language =\n  | \"markup\"\n  | \"bash\"\n  | \"clike\"\n  | \"c\"\n  | \"cpp\"\n  | \"css\"\n  | \"javascript\"\n  | \"jsx\"\n  | \"coffeescript\"\n  | \"actionscript\"\n  | \"css-extr\"\n  | \"diff\"\n  | \"git\"\n  | \"go\"\n  | \"graphql\"\n  | \"handlebars\"\n  | \"json\"\n  | \"less\"\n  | \"makefile\"\n  | \"markdown\"\n  | \"objectivec\"\n  | \"ocaml\"\n  | \"python\"\n  | \"reason\"\n  | \"sass\"\n  | \"scss\"\n  | \"sql\"\n  | \"stylus\"\n  | \"tsx\"\n  | \"typescript\"\n  | \"wasm\"\n  | \"yaml\";\n\nexport type CodeBlockProps = {\n  code: string;\n  language: Language;\n};\n\nexport const CodeBlock: React.FC<CodeBlockProps> = ({ code, language }) => {\n  return (\n    <Highlight\n      {...defaultProps}\n      code={code}\n      language={language}\n      theme={githubTheme}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <Box\n          component=\"pre\"\n          lineHeight={1.5}\n          py={1}\n          px={1}\n          className={className}\n          style={{...style, margin: 0}}\n        >\n          <Box component=\"code\">\n            {tokens.map((line, i) => (\n              <div {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n          </Box>\n        </Box>\n      )}\n    </Highlight>\n  );\n};\n","import React from 'react'\nimport {Box, Chip} from '@material-ui/core'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport type RegExpChipsProps = {\n  onSelect?: (data: {source: string, flags: string}) => void\n}\n\nexport const RegExpChips: React.FC<RegExpChipsProps> = ({onSelect}) => {\n  const styles = useStyles()\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" className={styles.tags}>\n      {REG_EXP_ARR.map(({ label, source }) => (\n        <Chip\n          key={label}\n          variant=\"outlined\"\n          label={label}\n          onClick={() => onSelect?.({ source, flags: \"\" })}\n        />\n      ))}\n    </Box>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  tags: {\n    \"& > *\": {\n      marginRight: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  },\n}))\n\nconst REG_EXP_ARR = [\n  {\n    label: \"身份证号\",\n    source: /^\\d{17}[0-9Xx]|\\d{15}$/.source,\n  },\n  {\n    label: \"Email地址\",\n    source: /^\\w[-\\w.+]*@([A-Za-z0-9][-A-Za-z0-9]+\\.)+[A-Za-z]{2,14}$/.source,\n  },\n  {\n    label: \"中文字符\",\n    source: /^[\\u4e00-\\u9fa5]+$/.source,\n  },\n  {\n    label: \"双字节字符(含汉字)\",\n    // eslint-disable-next-line no-control-regex\n    source: /^[^\\x00-\\xff]+$/.source,\n  },\n  {\n    label: \"时间(时:分:秒)\",\n    source: /^([01]?\\d|2[0-3]):[0-5]?\\d:[0-5]?\\d$/.source,\n  },\n  {\n    label: \"日期(年:月:日)\",\n    source: /^(([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))-02-29)$/\n      .source,\n  },\n  {\n    label: \"IPv4地址\",\n    source: /^\\d{0,3}\\.\\d{0,3}\\.\\d{0,3}\\.\\d{0,3}$/.source,\n  },\n  {\n    label: \"手机号\",\n    source: /^(13\\d|14[579]|15[^4\\D]|17[^49\\D]|18\\d)\\d{8}$/.source,\n  },\n];\n","import React, { useMemo, useState } from \"react\";\nimport {\n  Box,\n  TextField,\n  Tooltip,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport { CodeBlock } from \"components\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { FileCopyOutlined } from \"@material-ui/icons\";\nimport { useSnackbar } from \"notistack\";\n\nexport type RegExpTestPanelProps = {\n  source: string;\n  flags?: string;\n};\n\nexport const RegExpTestPanel: React.FC<RegExpTestPanelProps> = ({\n  source,\n  flags,\n}) => {\n  const [text, setText] = useState(\"\");\n  const { matched, code, error } = useMemo(() => {\n    try {\n      const regexp = new RegExp(source, flags);\n      const matched = regexp.test(text);\n      const code = `${regexp}.test('${text.replace(/'/g, \"\\\\'\")}')`\n      return { matched, code };\n    } catch (error) {\n      return { error: error as Error };\n    }\n  }, [flags, source, text]);\n  const { enqueueSnackbar } = useSnackbar();\n  if (error) return <Typography color=\"error\">{error.message}</Typography>;\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box>\n        <TextField\n          variant=\"outlined\"\n          label=\"输入源文本\"\n          multiline\n          fullWidth\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </Box>\n      <Box mt={1} display=\"flex\" alignItems=\"center\">\n        <Box flexGrow={1}>\n          <CodeBlock code={`${code!}\\n// ${matched!}`} language=\"javascript\" />\n        </Box>\n        <CopyToClipboard\n          text={code!}\n          onCopy={() => enqueueSnackbar(\"已复制!\", { autoHideDuration: 1500 })}\n        >\n          <Tooltip title=\"复制\" placement=\"top\">\n            <IconButton>\n              <FileCopyOutlined />\n            </IconButton>\n          </Tooltip>\n        </CopyToClipboard>\n      </Box>\n    </Box>\n  );\n};\n","import { useLocation, useHistory } from \"react-router-dom\";\nimport { useCallback } from \"react\";\n\n/**\n * 获取 URL 查询参数\n * 例如 regexp?source=abc&flags=g 返回查询参数 {source: \"abc\", flags: \"g\"}\n */\nexport const useQuery = () => {\n  const {pathname, search} = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(search);\n  const query: Record<string, string> = {}\n  for(let [key, value] of searchParams) {\n    query[key] = value\n  }\n  const setQuery = useCallback(\n    (query: Record<string, string>) => {\n      const search = new URLSearchParams(query).toString();\n      history.replace({ pathname, search });\n    },\n    [history, pathname]\n  );\n\n  return [query, setQuery] as const;\n};","export const debugErr = (...args: any[]) =>\r\n  process.env.NODE_ENV !== \"production\" && console.error(...args);\r\nexport const debugLog = (...args: any[]) =>\r\n  process.env.NODE_ENV !== \"production\" && console.log(...args);\r\nexport const debugWarn = (...args: any[]) =>\r\n  process.env.NODE_ENV !== \"production\" && console.warn(...args);\r\n\r\nexport const copyToClipboard = (text: string): boolean => {\r\n  const textArea = document.createElement('textarea')\r\n\r\n  textArea.style.position = 'fixed'\r\n  textArea.style.visibility = '-10000px'\r\n  textArea.value = text\r\n\r\n  document.body.appendChild(textArea)\r\n  textArea.focus()\r\n  textArea.select()\r\n\r\n  if (!document.execCommand('copy')) {\r\n    console.warn('浏览器不支持 document.execCommand(\"copy\")')\r\n    document.body.removeChild(textArea)\r\n    return false\r\n  } else {\r\n    document.body.removeChild(textArea)\r\n    return true\r\n  }\r\n}"],"sourceRoot":""}