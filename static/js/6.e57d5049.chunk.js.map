{"version":3,"sources":["pages/RegExpPage/index.tsx","components/VisualRegExp.tsx","hooks/useRegulex.ts","components/CodeBlock.tsx","components/CopyAction.tsx","components/OutLink.tsx","pages/RegExpPage/RegExpChips.tsx","pages/RegExpPage/RegExpTestPanel.tsx","hooks/useQuery.ts"],"names":["Language","TabIndex","useStyles","makeStyles","theme","regexpContainer","width","overflow","textAlign","error","color","VisualRegExp","regexp","boxProps","containerRef","useRef","styles","regulex","useAsync","a","Promise","resolve","reject","script","document","createElement","src","process","onload","window","require","onerror","Error","body","appendChild","value","useState","setError","useEffect","current","innerHTML","parse","visualize","paper","Raphael","source","flags","undefined","err","_err","RegexSyntaxError","msg","message","lastIndex","push","repeat","join","Box","Typography","className","component","ref","style","height","CodeBlock","code","language","defaultProps","githubTheme","tokens","getLineProps","getTokenProps","lineHeight","py","px","margin","map","line","i","key","token","CopyAction","text","enqueueSnackbar","useSnackbar","display","root","onCopy","autoHideDuration","Tooltip","title","placement","IconButton","FileCopy","OutLink","href","target","LinkOutlined","RegExpChips","onSelect","flexWrap","tags","REG_EXP_ARR","label","Chip","variant","onClick","marginRight","spacing","marginBottom","RegExpTestPanel","setText","useMemo","RegExp","result1","test","result2","search","escapedText","replace","code1","code2","flexDirection","TextField","multiline","fullWidth","onChange","e","mt","alignItems","flexGrow","regexpInput","fontSize","fontFamily","codeFontFamily","expand","transform","transition","transitions","create","duration","shortest","expandOpen","NameValue","name","whiteSpace","wordBreak","TabPanel","children","id","props","pt","RegExpMatchPanel","isEmpty","matches","exec","grey","red","green","group","n","RegExpReplacePanel","newValue","onNewValueChange","jsRegExp","newSubText","console","log","input","substring","index","length","flagItems","flag","useRegExp","useLocation","pathname","history","useHistory","searchParams","URLSearchParams","query","useCallback","toString","useQuery","setQuery","RegExpPage","TEST","tabIndex","setTabIndex","setRegexp","newText","setNewText","useTheme","useMediaQuery","breakpoints","down","expanded","setExpanded","JavaScript","setLanguage","separator","pb","MATCH","REPLACE","PageLayout","xs","md","flexBasis","Input","startAdornment","placeholder","newFlags","split","forEach","includes","item","FormControlLabel","control","Checkbox","checked","_","onFlagChange","justifyContent","mr","Tabs","textColor","indicatorColor","Tab","COMMONLY_USED_REGEXP","my","Card","CardContent","CardActions","ml","Select","MenuItem","Button","marginLeft","endIcon","ExpandMore","clsx","Collapse","in"],"mappings":"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","file":"static/js/6.e57d5049.chunk.js","sourcesContent":["import React, { useState, useMemo, useCallback } from \"react\";\nimport PageLayout from \"layout/PageLayout\";\nimport {\n  Select,\n  TextField,\n  Input,\n  Box,\n  Tabs,\n  Tab,\n  useMediaQuery,\n  Checkbox,\n  FormControlLabel,\n  CardContent,\n  CardActions,\n  Card,\n  Collapse,\n  Button,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { green, red, grey } from \"@material-ui/core/colors\";\nimport { useQuery } from \"hooks\";\nimport { debugErr } from \"utils\";\nimport {\n  ExpandMore,\n} from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport { VisualRegExp, RegExpType, CodeBlock, CopyAction, OutLink } from \"components\";\nimport { RegExpChips } from \"./RegExpChips\";\nimport { RegExpTestPanel } from \"./RegExpTestPanel\";\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n  interface Theme {\n    codeFontFamily: string;\n  }\n}\n\nenum Language {\n  JavaScript = \"JavaScript\",\n}\n\nenum TabIndex {\n  TEST,\n  MATCH,\n  REPLACE,\n  COMMONLY_USED_REGEXP,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  regexpInput: {\n    fontSize: \"1.6em\",\n    fontFamily: theme.codeFontFamily,\n  },\n  code: {\n    fontFamily: theme.codeFontFamily,\n  },\n  tags: {\n    \"& > *\": {\n      marginRight: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n}));\n\ntype PanelProps = {\n  regexp: RegExpType;\n  value: string;\n  onChange: (newValue: string) => void;\n};\n\nconst NameValue: React.FC<{ name: string; value: React.ReactNode }> = ({\n  name,\n  value,\n}) => {\n  const styles = useStyles();\n  return (\n    <Box display=\"flex\" className={styles.code} mt={1}>\n      <Box whiteSpace=\"nowrap\">{name}:&nbsp;</Box>\n      <Box style={{ wordBreak: \"break-all\" }}>{value}</Box>\n    </Box>\n  );\n};\n\nconst TabPanel: React.FC<{ id: number; value: number }> = ({\n  children,\n  id,\n  value,\n  ...props\n}) => {\n  return <Box {...props}>{id === value && <Box pt={3}>{children}</Box>}</Box>;\n};\n\nconst RegExpMatchPanel: React.FC<PanelProps> = ({\n  regexp,\n  value,\n  onChange,\n}) => {\n  const isEmpty = !value || !regexp.source;\n  const matches = useMemo(() => {\n    if (isEmpty) return null;\n\n    let jsRegExp;\n    try {\n      jsRegExp = new RegExp(regexp.source, regexp.flags);\n      return jsRegExp.exec(value);\n    } catch (err) {\n      debugErr(err);\n      return null;\n    }\n  }, [isEmpty, regexp, value]);\n  return (\n    <>\n      <Box>\n        <TextField\n          variant=\"outlined\"\n          label=\"输入源文本\"\n          multiline\n          fullWidth\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n        />\n      </Box>\n      <Box mt={2}>\n        {isEmpty && <Box color={grey[500]}>--</Box>}\n        {!isEmpty && matches === null && <Box color={red[500]}>不匹配!</Box>}\n        {!isEmpty && matches !== null && (\n          <Box>\n            <Box color={green[500]}>匹配!</Box>\n            <Box style={{ overflow: \"auto\" }}>\n              {matches.map((group, n) => (\n                <NameValue name={`分组 #${n}`} value={group} />\n              ))}\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </>\n  );\n};\n\ntype RegExpReplacePanelProps = PanelProps & {\n  newValue: string;\n  onNewValueChange: (newValue: string) => void;\n};\nconst RegExpReplacePanel: React.FC<RegExpReplacePanelProps> = ({\n  regexp,\n  value,\n  onChange,\n  newValue,\n  onNewValueChange,\n}) => {\n  const [newSubText, matches] = useMemo(() => {\n    let jsRegExp;\n    try {\n      jsRegExp = new RegExp(regexp.source, regexp.flags);\n    } catch (err) {\n      debugErr(err);\n      return [\"\", null];\n    }\n    const newSubText = value.replace(jsRegExp, newValue);\n    const matches = jsRegExp.exec(value);\n    console.log(\"matches:\", matches);\n    return [newSubText, matches];\n  }, [regexp.flags, regexp.source, newValue, value]);\n  return (\n    <>\n      <Box>\n        <TextField\n          variant=\"outlined\"\n          label=\"输入源文本\"\n          multiline\n          fullWidth\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n        />\n      </Box>\n      {matches !== null && (\n        <Box mt={2}>\n          <NameValue name=\"$$\" value=\"$\" />\n          <NameValue name=\"$&\" value={matches[0]} />\n          <NameValue\n            name=\"$`\"\n            value={matches.input.substring(0, matches.index)}\n          />\n          <NameValue\n            name=\"$'\"\n            value={matches.input.substring(matches.index + matches[0].length)}\n          />\n          {matches.map((group, n) =>\n            n >= 1 ? <NameValue name={\"$\" + n} value={group} /> : null\n          )}\n        </Box>\n      )}\n      <Box mt={2}>\n        <TextField\n          variant=\"outlined\"\n          label=\"输入替换文本\"\n          multiline\n          fullWidth\n          value={newValue}\n          onChange={(e) => onNewValueChange(e.target.value)}\n        />\n      </Box>\n      <Box mt={2}>\n        <Box>{newSubText}</Box>\n      </Box>\n    </>\n  );\n};\n\nconst flagItems = [\n  {\n    flag: \"g\",\n    label: \"全局匹配\",\n  },\n  {\n    flag: \"i\",\n    label: \"忽略大小写\",\n  },\n  {\n    flag: \"m\",\n    label: \"多行匹配\",\n  },\n] as const;\n\nconst useRegExp = () => {\n  const [query, setQuery] = useQuery();\n  const source = query.source || \"\";\n  const flags = query.flags || \"\";\n  const regexp: RegExpType = { source, flags };\n  const setRegExp = useCallback(\n    (regexp: RegExpType) => {\n      setQuery(regexp);\n    },\n    [setQuery]\n  );\n  return [regexp, setRegExp] as const;\n};\n\nconst RegExpPage: React.FC = () => {\n  const styles = useStyles();\n  const [tabIndex, setTabIndex] = useState(TabIndex.TEST);\n  const [regexp, setRegexp] = useRegExp();\n  const [text, setText] = useState(\"\");\n  const [newText, setNewText] = useState(\"\");\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [expanded, setExpanded] = useState(false);\n  const [language, setLanguage] = useState(Language.JavaScript);\n\n  // 单个标志位变化\n  const onFlagChange = (flag: \"g\" | \"i\" | \"m\", checked: boolean) => {\n    let newFlags = regexp.flags.replace(new RegExp(flag, \"g\"), \"\");\n    newFlags += checked ? flag : \"\";\n    setRegexp({ ...regexp, flags: newFlags });\n  };\n\n  // 一组标志位变化\n  const onFlagsChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    let newFlags = e.target.value;\n    // 去除无效标志位\n    newFlags = newFlags.replace(/[^gim]/, \"\");\n    // 去重\n    \"gim\".split(\"\").forEach((flag) => {\n      if (newFlags.includes(flag)) {\n        newFlags = newFlags.replace(new RegExp(flag, \"g\"), \"\") + flag;\n      }\n    });\n    setRegexp({ ...regexp, flags: newFlags });\n  };\n\n  const separator = (\n    <Box pt=\"6px\" pb=\"7px\" color=\"primary.main\">\n      /\n    </Box>\n  );\n\n  const code = useMemo(() => {\n    let code = \"\";\n    if (!expanded) return code;\n    if (tabIndex === TabIndex.TEST) {\n      code = `const str = \"${text}\";\n/${regexp.source}/${regexp.flags}.test(str)`;\n    } else if (tabIndex === TabIndex.MATCH) {\n      code = `const str = \"${text}\";\n/${regexp.source}/${regexp.flags}.exec(str)`;\n    } else if (tabIndex === TabIndex.REPLACE) {\n      code = `const str = \"${text}\";\nstr.replace(/${regexp.source}/${regexp.flags}, \"${newText}\")`;\n    }\n    return code;\n  }, [expanded, newText, regexp, tabIndex, text]);\n  return (\n    <PageLayout title=\"正则表达式\">\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Box display=\"flex\">\n          <Box flexGrow={{ xs: 2, md: 4 }} flexBasis={0}>\n            <Input\n              className={styles.regexpInput}\n              startAdornment={separator}\n              placeholder=\"pattern\"\n              fullWidth\n              value={regexp.source}\n              onChange={(e) => setRegexp({ ...regexp, source: e.target.value })}\n            />\n          </Box>\n          <Box flexGrow={{ xs: 1, md: 1 }} flexBasis={0}>\n            <Input\n              className={styles.regexpInput}\n              startAdornment={separator}\n              placeholder=\"flags\"\n              fullWidth\n              value={regexp.flags}\n              onChange={onFlagsChange}\n            />\n          </Box>\n        </Box>\n\n        <Box display=\"flex\" mt={1} flexWrap=\"wrap\">\n          {flagItems.map((item) => (\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={regexp.flags.includes(item.flag)}\n                  onChange={(_, checked) => onFlagChange(item.flag, checked)}\n                  color=\"primary\"\n                />\n              }\n              label={item.label}\n            />\n          ))}\n          <Box\n            flexGrow={1}\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            mr={1}\n          >\n          <OutLink title='Regular expressions - MDN' href={'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions'} />\n          <CopyAction text={`/${regexp.source}/${regexp.flags}`} />\n          </Box>\n        </Box>\n\n        <Box mt={1}>\n          <VisualRegExp regexp={regexp} />\n          {/* <Tooltip title=\"分享\" arrow placement=\"top\">\n            <CopyToClipboard\n              text={href || \"\"}\n              onCopy={() =>\n                enqueueSnackbar(\n                  <span>\n                    <a\n                      href={href}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      style={{ color: \"white\" }}\n                    >\n                      {href}\n                    </a>{\" \"}\n                    已复制，快去分享吧！\n                  </span>\n                )\n              }\n            >\n              <IconButton>\n                <Share />\n              </IconButton>\n            </CopyToClipboard>\n          </Tooltip> */}\n        </Box>\n\n        <Box mt={2}>\n          <Tabs\n            value={tabIndex}\n            onChange={(_, value) => setTabIndex(value as number)}\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n            variant={matches ? \"fullWidth\" : \"standard\"}\n          >\n            <Tab label=\"测试\"></Tab>\n            <Tab label=\"匹配\"></Tab>\n            <Tab label=\"替换\"></Tab>\n            <Tab label=\"常用正则\"></Tab>\n          </Tabs>\n          <TabPanel id={TabIndex.TEST} value={tabIndex}>\n            <RegExpTestPanel source={regexp.source} flags={regexp.flags} />\n          </TabPanel>\n          <TabPanel id={TabIndex.MATCH} value={tabIndex}>\n            <RegExpMatchPanel regexp={regexp} value={text} onChange={setText} />\n          </TabPanel>\n          <TabPanel id={TabIndex.REPLACE} value={tabIndex}>\n            <RegExpReplacePanel\n              regexp={regexp}\n              value={text}\n              onChange={setText}\n              newValue={newText}\n              onNewValueChange={setNewText}\n            />\n          </TabPanel>\n          <TabPanel id={TabIndex.COMMONLY_USED_REGEXP} value={tabIndex}>\n            <RegExpChips onSelect={(regexp) => setRegexp(regexp)} />\n          </TabPanel>\n        </Box>\n      </Box>\n\n      {/* 测试/匹配/替换 */}\n      <Box my={2} display=\"none\">\n        <Card>\n          <CardContent></CardContent>\n          <CardActions>\n            {expanded && (\n              <Box ml={1}>\n                <Select\n                  value={language}\n                  onChange={(e) => setLanguage(e.target.value as Language)}\n                >\n                  <MenuItem value={Language.JavaScript}>JavaScript</MenuItem>\n                </Select>\n              </Box>\n            )}\n            <Button\n              style={{ marginLeft: \"auto\" }}\n              endIcon={\n                <ExpandMore\n                  className={clsx(styles.expand, {\n                    [styles.expandOpen]: expanded,\n                  })}\n                />\n              }\n              onClick={() => setExpanded(!expanded)}\n            >\n              生成代码\n            </Button>\n          </CardActions>\n          {/* 生成代码 */}\n          <Collapse in={expanded}>\n            <CardContent>\n              <CodeBlock code={code} language=\"javascript\" />\n            </CardContent>\n            <CardActions>\n              <CopyAction text={code} />\n            </CardActions>\n          </Collapse>\n        </Card>\n      </Box>\n    </PageLayout>\n  );\n};\n\nexport default RegExpPage;\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { useRegulex } from 'hooks';\r\nimport { debugErr } from 'utils';\r\nimport { Typography, BoxProps, Box } from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  regexpContainer: {\r\n    width: \"100%\",\r\n    overflow: \"auto\",\r\n    textAlign: \"center\"\r\n  },\r\n  error: {\r\n    width: \"100%\",\r\n    color: \"red\",\r\n    overflow: \"auto\"\r\n  }\r\n}));\r\n\r\nexport type RegExpType = {\r\n  source: string;\r\n  flags: string;\r\n};\r\n\r\nexport type VisualRegExpProps = {\r\n  regexp: RegExpType\r\n} & BoxProps\r\n\r\nexport const VisualRegExp: React.FC<VisualRegExpProps> = ({ regexp, ...boxProps}) => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const styles = useStyles();\r\n  const { value: regulex } = useRegulex();\r\n  const [error, setError] = useState<Error>();\r\n  useEffect(() => {\r\n    if (!regulex || !containerRef.current) return;\r\n\r\n    // 清除生成的图片\r\n    containerRef.current.innerHTML = \"\";\r\n\r\n    const { parse, visualize, Raphael } = regulex;\r\n    var paper = Raphael(containerRef.current, 0, 0);\r\n    try {\r\n      // 重新生成图片\r\n      visualize(parse(regexp.source), regexp.flags, paper);\r\n      // 重置错误\r\n      setError(undefined);\r\n    } catch (err) {\r\n      let _err = err;\r\n      // 如果是语法错误，格式化错误\r\n      if (err instanceof parse.RegexSyntaxError) {\r\n        var msg = [\"Error:\" + err.message, \"\"];\r\n        if (typeof err.lastIndex === \"number\") {\r\n          msg.push(regexp.source);\r\n          msg.push(\"-\".repeat(err.lastIndex) + \"^\");\r\n        }\r\n        _err = new Error(msg.join(\"\\n\"));\r\n      }\r\n      setError(_err);\r\n      debugErr(_err);\r\n    }\r\n  }, [regexp, regulex]);\r\n  return (\r\n    <Box {...boxProps}>\r\n      {error && (\r\n        <Typography className={styles.error} component=\"pre\">\r\n          <code>{error.message}</code>\r\n        </Typography>\r\n      )}\r\n      <div\r\n        ref={containerRef}\r\n        className={styles.regexpContainer}\r\n        style={{ height: error ? 0 : \"auto\" }}\r\n      />\r\n    </Box>\r\n  );\r\n};","import { useAsync } from \"react-use\";\n\nexport default function useRegulex() {\n  return useAsync(async () => {\n    return new Promise<any>((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.src = process.env.PUBLIC_URL + \"/regulex.js\";\n      script.onload = () => {\n        const regulex = window.require(\"regulex\");\n        resolve(regulex);\n      };\n      script.onerror = () => {\n        reject(new Error(\"load regulex error!\"));\n      };\n      document.body.appendChild(script);\n    });\n  });\n}\n","import React from \"react\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport githubTheme from \"prism-react-renderer/themes/github\";\nimport { Box } from \"@material-ui/core\";\n\nexport type Language =\n  | \"markup\"\n  | \"bash\"\n  | \"clike\"\n  | \"c\"\n  | \"cpp\"\n  | \"css\"\n  | \"javascript\"\n  | \"jsx\"\n  | \"coffeescript\"\n  | \"actionscript\"\n  | \"css-extr\"\n  | \"diff\"\n  | \"git\"\n  | \"go\"\n  | \"graphql\"\n  | \"handlebars\"\n  | \"json\"\n  | \"less\"\n  | \"makefile\"\n  | \"markdown\"\n  | \"objectivec\"\n  | \"ocaml\"\n  | \"python\"\n  | \"reason\"\n  | \"sass\"\n  | \"scss\"\n  | \"sql\"\n  | \"stylus\"\n  | \"tsx\"\n  | \"typescript\"\n  | \"wasm\"\n  | \"yaml\";\n\nexport type CodeBlockProps = {\n  code: string;\n  language: Language;\n};\n\nexport const CodeBlock: React.FC<CodeBlockProps> = ({ code, language }) => {\n  return (\n    <Highlight\n      {...defaultProps}\n      code={code}\n      language={language}\n      theme={githubTheme}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <Box\n          component=\"pre\"\n          lineHeight={1.5}\n          py={1}\n          px={1}\n          className={className}\n          style={{...style, margin: 0}}\n        >\n          <Box component=\"code\">\n            {tokens.map((line, i) => (\n              <div {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n          </Box>\n        </Box>\n      )}\n    </Highlight>\n  );\n};\n","import React from \"react\";\r\nimport { Box, Tooltip, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport { FileCopy } from \"@material-ui/icons\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport type CopyActionProps = {\r\n  text: string\r\n};\r\n\r\nexport const CopyAction: React.FC<CopyActionProps> = ({text}) => {\r\n  const styles = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  return (\r\n    <Box display=\"flex\" className={styles.root}>\r\n      <CopyToClipboard\r\n        text={text}\r\n        onCopy={() => enqueueSnackbar(\"已复制!\", { autoHideDuration: 1500 })}\r\n      >\r\n        <Tooltip title=\"复制\" placement=\"top\">\r\n          <IconButton>\r\n            <FileCopy />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </CopyToClipboard>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n","import React from \"react\";\r\nimport { Tooltip, IconButton } from \"@material-ui/core\";\r\nimport { LinkOutlined } from \"@material-ui/icons\";\r\n\r\nexport type OutLinkProps = {\r\n  href: string;\r\n  title?: Exclude<React.ReactNode, null | undefined>;\r\n};\r\n\r\nexport const OutLink: React.FC<OutLinkProps> = ({ href, title = \"\" }) => {\r\n  return (\r\n    <Tooltip title={title}>\r\n      <IconButton component=\"a\" href={href} target=\"_blank\">\r\n        <LinkOutlined />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n","import React from 'react'\nimport {Box, Chip} from '@material-ui/core'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport type RegExpChipsProps = {\n  onSelect?: (data: {source: string, flags: string}) => void\n}\n\nexport const RegExpChips: React.FC<RegExpChipsProps> = ({onSelect}) => {\n  const styles = useStyles()\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" className={styles.tags}>\n      {REG_EXP_ARR.map(({ label, source }) => (\n        <Chip\n          key={label}\n          variant=\"outlined\"\n          label={label}\n          onClick={() => onSelect?.({ source, flags: \"\" })}\n        />\n      ))}\n    </Box>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  tags: {\n    \"& > *\": {\n      marginRight: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  },\n}))\n\nconst REG_EXP_ARR = [\n  {\n    label: \"身份证号\",\n    source: /^\\d{17}[0-9Xx]|\\d{15}$/.source,\n  },\n  {\n    label: \"Email地址\",\n    source: /^\\w[-\\w.+]*@([A-Za-z0-9][-A-Za-z0-9]+\\.)+[A-Za-z]{2,14}$/.source,\n  },\n  {\n    label: \"中文字符\",\n    source: /^[\\u4e00-\\u9fa5]+$/.source,\n  },\n  {\n    label: \"双字节字符(含汉字)\",\n    // eslint-disable-next-line no-control-regex\n    source: /^[^\\x00-\\xff]+$/.source,\n  },\n  {\n    label: \"时间(时:分:秒)\",\n    source: /^([01]?\\d|2[0-3]):[0-5]?\\d:[0-5]?\\d$/.source,\n  },\n  {\n    label: \"日期(年:月:日)\",\n    source: /^(([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))-02-29)$/\n      .source,\n  },\n  {\n    label: \"IPv4地址\",\n    source: /^\\d{0,3}\\.\\d{0,3}\\.\\d{0,3}\\.\\d{0,3}$/.source,\n  },\n  {\n    label: \"手机号\",\n    source: /^(13\\d|14[579]|15[^4\\D]|17[^49\\D]|18\\d)\\d{8}$/.source,\n  },\n];\n","import React, { useMemo, useState } from \"react\";\nimport { Box, TextField, Typography } from \"@material-ui/core\";\nimport { CodeBlock, CopyAction, OutLink } from \"components\";\n\nexport type RegExpTestPanelProps = {\n  source: string;\n  flags?: string;\n};\n\nexport const RegExpTestPanel: React.FC<RegExpTestPanelProps> = ({\n  source,\n  flags,\n}) => {\n  const [text, setText] = useState(\"\");\n  const { result1, result2, code1, code2, error } = useMemo(() => {\n    try {\n      const regexp = new RegExp(source, flags);\n      const result1 = regexp.test(text);\n      const result2 = text.search(regexp);\n      const escapedText = text.replace(/'/g, \"\\\\'\");\n      const code1 = `${regexp}.test('${escapedText}')`;\n      const code2 = `'${escapedText}'.search(${regexp})`;\n      return { result1, code1, code2, result2 };\n    } catch (error) {\n      return { error: error as Error };\n    }\n  }, [flags, source, text]);\n  if (error) return <Typography color=\"error\">{error.message}</Typography>;\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box>\n        <TextField\n          variant=\"outlined\"\n          label=\"输入源文本\"\n          multiline\n          fullWidth\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </Box>\n      <Box overflow=\"auto\">\n        <Box mt={2} display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Box flexGrow={1}>\n            <CodeBlock\n              code={`${code1!}\\n// ${result1!}`}\n              language=\"javascript\"\n            />\n          </Box>\n          <Box display='flex'>\n            <OutLink\n              title=\"RegExp.prototype.test() - MDN\"\n              href={\n                \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\"\n              }\n            />\n            <CopyAction text={code1!} />\n          </Box>\n        </Box>\n        <Box mt={2} display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Box flexGrow={1}>\n            <CodeBlock\n              code={`${code2!}\\n// ${result2!}`}\n              language=\"javascript\"\n            />\n          </Box>\n          <Box display='flex'>\n            <OutLink\n              title=\"String.prototype.search() - MDN\"\n              href={\n                \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/search\"\n              }\n            />\n            <CopyAction text={code2!} />\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","import { useLocation, useHistory } from \"react-router-dom\";\nimport { useCallback } from \"react\";\n\n/**\n * 获取 URL 查询参数\n * 例如 regexp?source=abc&flags=g 返回查询参数 {source: \"abc\", flags: \"g\"}\n */\nexport const useQuery = () => {\n  const {pathname, search} = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(search);\n  const query: Record<string, string> = {}\n  for(let [key, value] of searchParams) {\n    query[key] = value\n  }\n  const setQuery = useCallback(\n    (query: Record<string, string>) => {\n      const search = new URLSearchParams(query).toString();\n      history.replace({ pathname, search });\n    },\n    [history, pathname]\n  );\n\n  return [query, setQuery] as const;\n};"],"sourceRoot":""}