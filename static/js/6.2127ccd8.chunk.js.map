{"version":3,"sources":["pages/RegExpPage.tsx","components/VisualRegExp.tsx","hooks/useRegulex.ts","components/CodeBlock.tsx","hooks/useQuery.ts","utils/index.ts"],"names":["Language","TabIndex","useStyles","makeStyles","theme","regexpContainer","width","overflow","textAlign","error","color","VisualRegExp","regexp","boxProps","containerRef","useRef","styles","regulex","useAsync","a","Promise","resolve","reject","script","document","createElement","src","process","onload","window","require","onerror","Error","body","appendChild","value","useState","setError","useEffect","current","innerHTML","parse","visualize","paper","Raphael","source","flags","undefined","err","_err","RegexSyntaxError","msg","message","lastIndex","push","repeat","join","Box","Typography","className","component","ref","style","height","CodeBlock","code","language","defaultProps","githubTheme","tokens","getLineProps","getTokenProps","lineHeight","py","px","margin","map","line","i","key","token","regexpInput","fontSize","fontFamily","codeFontFamily","tags","marginRight","spacing","marginBottom","expand","transform","transition","transitions","create","duration","shortest","expandOpen","NameValue","name","display","mt","whiteSpace","wordBreak","TabPanel","children","id","props","pt","RegExpTestPanel","onChange","isEmpty","matched","useMemo","RegExp","test","TextField","variant","label","multiline","fullWidth","e","target","ml","grey","green","red","RegExpMatchPanel","matches","exec","group","n","RegExpReplacePanel","newValue","onNewValueChange","jsRegExp","newSubText","replace","console","log","input","substring","index","length","flagItems","flag","useRegExp","useLocation","pathname","search","history","useHistory","searchParams","URLSearchParams","query","useCallback","toString","useQuery","setQuery","mostRegExps","RegExpPage","TEST","tabIndex","setTabIndex","setRegexp","text","setText","newText","setNewText","useTheme","useMediaQuery","breakpoints","down","expanded","setExpanded","enqueueSnackbar","useSnackbar","JavaScript","setLanguage","separator","pb","MATCH","REPLACE","PageLayout","title","flexDirection","flexGrow","xs","md","flexBasis","Input","startAdornment","placeholder","newFlags","split","forEach","includes","flexWrap","item","FormControlLabel","control","Checkbox","checked","_","onFlagChange","justifyContent","alignItems","mr","Tooltip","IconButton","onClick","textArea","position","visibility","focus","select","execCommand","removeChild","warn","copyToClipboard","FileCopyOutlined","Tabs","textColor","indicatorColor","Tab","COMMONLY_USED_REGEXP","Chip","my","Card","CardContent","CardActions","Select","MenuItem","Button","marginLeft","endIcon","ExpandMore","clsx","Collapse","in","onCopy","autoHideDuration","placement","FileCopy"],"mappings":"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","file":"static/js/6.2127ccd8.chunk.js","sourcesContent":["import React, {\n  useState,\n  useMemo,\n  useCallback,\n} from \"react\";\nimport PageLayout from \"layout/PageLayout\";\nimport {\n  Select,\n  TextField,\n  Input,\n  Box,\n  Tabs,\n  Tab,\n  useMediaQuery,\n  Checkbox,\n  FormControlLabel,\n  CardContent,\n  CardActions,\n  Card,\n  Chip,\n  IconButton,\n  Tooltip,\n  Collapse,\n  Button,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { green, red, grey } from \"@material-ui/core/colors\";\nimport { useQuery } from \"hooks\";\nimport { debugErr } from \"utils\";\nimport { useSnackbar } from \"notistack\";\nimport { FileCopy, ExpandMore, FileCopyOutlined } from \"@material-ui/icons\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport clsx from \"clsx\";\nimport { VisualRegExp, RegExpType, CodeBlock } from \"components\";\nimport { copyToClipboard } from \"utils\";\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n  interface Theme {\n    codeFontFamily: string;\n  }\n}\n\nenum Language {\n  JavaScript = \"JavaScript\",\n}\n\nenum TabIndex {\n  TEST,\n  MATCH,\n  REPLACE,\n  COMMONLY_USED_REGEXP\n}\n\nconst useStyles = makeStyles((theme) => ({\n  regexpInput: {\n    fontSize: 20,\n    fontFamily: theme.codeFontFamily,\n  },\n  code: {\n    fontFamily: theme.codeFontFamily,\n  },\n  tags: {\n    \"& > *\": {\n      marginRight: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n}));\n\ntype PanelProps = {\n  regexp: RegExpType;\n  value: string;\n  onChange: (newValue: string) => void;\n};\n\nconst NameValue: React.FC<{ name: string; value: React.ReactNode }> = ({\n  name,\n  value,\n}) => {\n  const styles = useStyles();\n  return (\n    <Box display=\"flex\" className={styles.code} mt={1}>\n      <Box whiteSpace=\"nowrap\">{name}:&nbsp;</Box>\n      <Box style={{ wordBreak: \"break-all\" }}>{value}</Box>\n    </Box>\n  );\n};\n\nconst TabPanel: React.FC<{ id: number; value: number }> = ({\n  children,\n  id,\n  value,\n  ...props\n}) => {\n  return <Box {...props}>{id === value && <Box pt={3}>{children}</Box>}</Box>;\n};\n\nconst RegExpTestPanel: React.FC<PanelProps> = ({ regexp, value, onChange }) => {\n  const isEmpty = !value || !regexp.source;\n  const matched = useMemo(() => {\n    if (isEmpty) return false;\n\n    let jsRegExp;\n    try {\n      jsRegExp = new RegExp(regexp.source, regexp.flags);\n      return jsRegExp.test(value);\n    } catch (err) {\n      debugErr(err);\n      return false;\n    }\n  }, [regexp, value, isEmpty]);\n  return (\n    <>\n      <Box>\n        <TextField\n          variant=\"outlined\"\n          label=\"输入源文本\"\n          multiline\n          fullWidth\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n        />\n      </Box>\n      <Box mt={2} ml={1}>\n        {isEmpty ? (\n          <Box color={grey[500]}>--</Box>\n        ) : matched ? (\n          <Box color={green[500]}>匹配!</Box>\n        ) : (\n          <Box color={red[500]}>不匹配!</Box>\n        )}\n      </Box>\n    </>\n  );\n};\n\nconst RegExpMatchPanel: React.FC<PanelProps> = ({\n  regexp,\n  value,\n  onChange,\n}) => {\n  const isEmpty = !value || !regexp.source;\n  const matches = useMemo(() => {\n    if (isEmpty) return null;\n\n    let jsRegExp;\n    try {\n      jsRegExp = new RegExp(regexp.source, regexp.flags);\n      return jsRegExp.exec(value);\n    } catch (err) {\n      debugErr(err);\n      return null;\n    }\n  }, [isEmpty, regexp, value]);\n  return (\n    <>\n      <Box>\n        <TextField\n          variant=\"outlined\"\n          label=\"输入源文本\"\n          multiline\n          fullWidth\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n        />\n      </Box>\n      <Box mt={2}>\n        {isEmpty && <Box color={grey[500]}>--</Box>}\n        {!isEmpty && matches === null && <Box color={red[500]}>不匹配!</Box>}\n        {!isEmpty && matches !== null && (\n          <Box>\n            <Box color={green[500]}>匹配!</Box>\n            <Box style={{ overflow: \"auto\" }}>\n              {matches.map((group, n) => (\n                <NameValue name={`分组 #${n}`} value={group} />\n              ))}\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </>\n  );\n};\n\ntype RegExpReplacePanelProps = PanelProps & {\n  newValue: string;\n  onNewValueChange: (newValue: string) => void;\n};\nconst RegExpReplacePanel: React.FC<RegExpReplacePanelProps> = ({\n  regexp,\n  value,\n  onChange,\n  newValue,\n  onNewValueChange,\n}) => {\n  const [newSubText, matches] = useMemo(() => {\n    let jsRegExp;\n    try {\n      jsRegExp = new RegExp(regexp.source, regexp.flags);\n    } catch (err) {\n      debugErr(err);\n      return [\"\", null];\n    }\n    const newSubText = value.replace(jsRegExp, newValue);\n    const matches = jsRegExp.exec(value);\n    console.log(\"matches:\", matches);\n    return [newSubText, matches];\n  }, [regexp.flags, regexp.source, newValue, value]);\n  return (\n    <>\n      <Box>\n        <TextField\n          variant=\"outlined\"\n          label=\"输入源文本\"\n          multiline\n          fullWidth\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n        />\n      </Box>\n      {matches !== null && (\n        <Box mt={2}>\n          <NameValue name=\"$$\" value=\"$\" />\n          <NameValue name=\"$&\" value={matches[0]} />\n          <NameValue\n            name=\"$`\"\n            value={matches.input.substring(0, matches.index)}\n          />\n          <NameValue\n            name=\"$'\"\n            value={matches.input.substring(matches.index + matches[0].length)}\n          />\n          {matches.map((group, n) =>\n            n >= 1 ? <NameValue name={\"$\" + n} value={group} /> : null\n          )}\n        </Box>\n      )}\n      <Box mt={2}>\n        <TextField\n          variant=\"outlined\"\n          label=\"输入替换文本\"\n          multiline\n          fullWidth\n          value={newValue}\n          onChange={(e) => onNewValueChange(e.target.value)}\n        />\n      </Box>\n      <Box mt={2}>\n        <Box>{newSubText}</Box>\n      </Box>\n    </>\n  );\n};\n\nconst flagItems = [\n  {\n    flag: \"g\",\n    label: \"全局匹配\",\n  },\n  {\n    flag: \"i\",\n    label: \"忽略大小写\",\n  },\n  {\n    flag: \"m\",\n    label: \"多行匹配\",\n  },\n] as const;\n\nconst useRegExp = () => {\n  const [query, setQuery] = useQuery();\n  const source = query.source || \"\";\n  const flags = query.flags || \"\";\n  const regexp: RegExpType = { source, flags };\n  const setRegExp = useCallback(\n    (regexp: RegExpType) => {\n      setQuery(regexp);\n    },\n    [setQuery]\n  );\n  return [regexp, setRegExp] as const;\n};\n\nconst RegExpPage: React.FC = () => {\n  const styles = useStyles();\n  const [tabIndex, setTabIndex] = useState(TabIndex.TEST);\n  const [regexp, setRegexp] = useRegExp();\n  const [text, setText] = useState(\"\");\n  const [newText, setNewText] = useState(\"\");\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [expanded, setExpanded] = useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const [language, setLanguage] = useState(Language.JavaScript);\n\n  // 单个标志位变化\n  const onFlagChange = (flag: \"g\" | \"i\" | \"m\", checked: boolean) => {\n    let newFlags = regexp.flags.replace(new RegExp(flag, \"g\"), \"\");\n    newFlags += checked ? flag : \"\";\n    setRegexp({ ...regexp, flags: newFlags });\n  };\n\n  // 一组标志位变化\n  const onFlagsChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    let newFlags = e.target.value;\n    // 去除无效标志位\n    newFlags = newFlags.replace(/[^gim]/, \"\");\n    // 去重\n    \"gim\".split(\"\").forEach((flag) => {\n      if (newFlags.includes(flag)) {\n        newFlags = newFlags.replace(new RegExp(flag, \"g\"), \"\") + flag;\n      }\n    });\n    setRegexp({ ...regexp, flags: newFlags });\n  };\n\n  const separator = (\n    <Box pt=\"6px\" pb=\"7px\" color=\"primary.main\">\n      /\n    </Box>\n  );\n\n  const code = useMemo(() => {\n    let code = \"\";\n    if (!expanded) return code;\n    if (tabIndex === TabIndex.TEST) {\n      code = `const str = \"${text}\";\n/${regexp.source}/${regexp.flags}.test(str)`;\n    } else if (tabIndex === TabIndex.MATCH) {\n      code = `const str = \"${text}\";\n/${regexp.source}/${regexp.flags}.exec(str)`;\n    } else if (tabIndex === TabIndex.REPLACE) {\n      code = `const str = \"${text}\";\nstr.replace(/${regexp.source}/${regexp.flags}, \"${newText}\")`;\n    }\n    return code;\n  }, [expanded, newText, regexp, tabIndex, text]);\n  return (\n    <PageLayout title=\"正则表达式\">\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Box display=\"flex\">\n          <Box flexGrow={{ xs: 2, md: 4 }} flexBasis={0}>\n            <Input\n              className={styles.regexpInput}\n              startAdornment={separator}\n              placeholder=\"pattern\"\n              fullWidth\n              value={regexp.source}\n              onChange={(e) => setRegexp({ ...regexp, source: e.target.value })}\n            />\n          </Box>\n          <Box flexGrow={{ xs: 1, md: 1 }} flexBasis={0}>\n            <Input\n              className={styles.regexpInput}\n              startAdornment={separator}\n              placeholder=\"flags\"\n              fullWidth\n              value={regexp.flags}\n              onChange={onFlagsChange}\n            />\n          </Box>\n        </Box>\n\n        <Box display=\"flex\" mt={1} flexWrap=\"wrap\">\n          {flagItems.map((item) => (\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={regexp.flags.includes(item.flag)}\n                  onChange={(_, checked) => onFlagChange(item.flag, checked)}\n                  color=\"primary\"\n                />\n              }\n              label={item.label}\n            />\n          ))}\n          <Box\n            flexGrow={1}\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            mr={1}\n          >\n            <Tooltip title={`复制`}>\n            <IconButton\n              onClick={() => {\n                if (copyToClipboard(`/${regexp.source}/${regexp.flags}`)) {\n                  enqueueSnackbar(<span>已复制!</span>);\n                }\n              }}\n            >\n              <FileCopyOutlined />\n            </IconButton>\n            </Tooltip>\n          </Box>\n        </Box>\n\n        <Box mt={1}>\n          <VisualRegExp regexp={regexp} />\n          {/* <Tooltip title=\"分享\" arrow placement=\"top\">\n            <CopyToClipboard\n              text={href || \"\"}\n              onCopy={() =>\n                enqueueSnackbar(\n                  <span>\n                    <a\n                      href={href}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      style={{ color: \"white\" }}\n                    >\n                      {href}\n                    </a>{\" \"}\n                    已复制，快去分享吧！\n                  </span>\n                )\n              }\n            >\n              <IconButton>\n                <Share />\n              </IconButton>\n            </CopyToClipboard>\n          </Tooltip> */}\n        </Box>\n\n        <Box mt={2}>\n          <Tabs\n            value={tabIndex}\n            onChange={(_, value) => setTabIndex(value as number)}\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n            variant={matches ? \"fullWidth\" : \"standard\"}\n          >\n            <Tab label=\"测试\"></Tab>\n            <Tab label=\"匹配\"></Tab>\n            <Tab label=\"替换\"></Tab>\n            <Tab label=\"常用正则\"></Tab>\n          </Tabs>\n          <TabPanel id={TabIndex.TEST} value={tabIndex}>\n            <RegExpTestPanel regexp={regexp} value={text} onChange={setText} />\n          </TabPanel>\n          <TabPanel id={TabIndex.MATCH} value={tabIndex}>\n            <RegExpMatchPanel regexp={regexp} value={text} onChange={setText} />\n          </TabPanel>\n          <TabPanel id={TabIndex.REPLACE} value={tabIndex}>\n            <RegExpReplacePanel\n              regexp={regexp}\n              value={text}\n              onChange={setText}\n              newValue={newText}\n              onNewValueChange={setNewText}\n            />\n          </TabPanel>\n          <TabPanel id={TabIndex.COMMONLY_USED_REGEXP} value={tabIndex}>\n            <Box display=\"flex\" flexWrap=\"wrap\" className={styles.tags}>\n              {mostRegExps.map(({ label, source }) => (\n                <Chip\n                  key={label}\n                  variant=\"outlined\"\n                  label={label}\n                  onClick={() => setRegexp({ source, flags: \"\" })}\n                />\n              ))}\n            </Box>\n          </TabPanel>\n        </Box>\n      </Box>\n\n      {/* 测试/匹配/替换 */}\n      <Box my={2} display=\"none\">\n        <Card>\n          <CardContent></CardContent>\n          <CardActions>\n            {expanded && (\n              <Box ml={1}>\n                <Select\n                  value={language}\n                  onChange={(e) => setLanguage(e.target.value as Language)}\n                >\n                  <MenuItem value={Language.JavaScript}>JavaScript</MenuItem>\n                </Select>\n              </Box>\n            )}\n            <Button\n              style={{ marginLeft: \"auto\" }}\n              endIcon={\n                <ExpandMore\n                  className={clsx(styles.expand, {\n                    [styles.expandOpen]: expanded,\n                  })}\n                />\n              }\n              onClick={() => setExpanded(!expanded)}\n            >\n              生成代码\n            </Button>\n          </CardActions>\n          {/* 生成代码 */}\n          <Collapse in={expanded}>\n            <CardContent>\n              <CodeBlock code={code} language=\"javascript\" />\n            </CardContent>\n            <CardActions>\n              <CopyToClipboard\n                text={code}\n                onCopy={() =>\n                  enqueueSnackbar(\"已复制!\", { autoHideDuration: 1500 })\n                }\n              >\n                <Tooltip title=\"复制\" placement=\"top\">\n                  <IconButton>\n                    <FileCopy />\n                  </IconButton>\n                </Tooltip>\n              </CopyToClipboard>\n            </CardActions>\n          </Collapse>\n        </Card>\n      </Box>\n    </PageLayout>\n  );\n};\n\nconst mostRegExps = [\n  {\n    label: \"身份证号\",\n    source: /^\\d{17}[0-9Xx]|\\d{15}$/.source,\n  },\n  {\n    label: \"Email地址\",\n    source: /^\\w[-\\w.+]*@([A-Za-z0-9][-A-Za-z0-9]+\\.)+[A-Za-z]{2,14}$/.source,\n  },\n  {\n    label: \"中文字符\",\n    source: /^[\\u4e00-\\u9fa5]+$/.source,\n  },\n  {\n    label: \"双字节字符(含汉字)\",\n    // eslint-disable-next-line no-control-regex\n    source: /^[^\\x00-\\xff]+$/.source,\n  },\n  {\n    label: \"时间(时:分:秒)\",\n    source: /^([01]?\\d|2[0-3]):[0-5]?\\d:[0-5]?\\d$/.source,\n  },\n  {\n    label: \"日期(年:月:日)\",\n    source: /^(([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))-02-29)$/\n      .source,\n  },\n  {\n    label: \"IPv4地址\",\n    source: /^\\d{0,3}\\.\\d{0,3}\\.\\d{0,3}\\.\\d{0,3}$/.source,\n  },\n  {\n    label: \"手机号\",\n    source: /^(13\\d|14[579]|15[^4\\D]|17[^49\\D]|18\\d)\\d{8}$/.source,\n  },\n];\n\nexport default RegExpPage;\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { useRegulex } from 'hooks';\r\nimport { debugErr } from 'utils';\r\nimport { Typography, BoxProps, Box } from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  regexpContainer: {\r\n    width: \"100%\",\r\n    overflow: \"auto\",\r\n    textAlign: \"center\"\r\n  },\r\n  error: {\r\n    width: \"100%\",\r\n    color: \"red\",\r\n    overflow: \"auto\"\r\n  }\r\n}));\r\n\r\nexport type RegExpType = {\r\n  source: string;\r\n  flags: string;\r\n};\r\n\r\nexport type VisualRegExpProps = {\r\n  regexp: RegExpType\r\n} & BoxProps\r\n\r\nexport const VisualRegExp: React.FC<VisualRegExpProps> = ({ regexp, ...boxProps}) => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const styles = useStyles();\r\n  const { value: regulex } = useRegulex();\r\n  const [error, setError] = useState<Error>();\r\n  useEffect(() => {\r\n    if (!regulex || !containerRef.current) return;\r\n\r\n    // 清除生成的图片\r\n    containerRef.current.innerHTML = \"\";\r\n\r\n    const { parse, visualize, Raphael } = regulex;\r\n    var paper = Raphael(containerRef.current, 0, 0);\r\n    try {\r\n      // 重新生成图片\r\n      visualize(parse(regexp.source), regexp.flags, paper);\r\n      // 重置错误\r\n      setError(undefined);\r\n    } catch (err) {\r\n      let _err = err;\r\n      // 如果是语法错误，格式化错误\r\n      if (err instanceof parse.RegexSyntaxError) {\r\n        var msg = [\"Error:\" + err.message, \"\"];\r\n        if (typeof err.lastIndex === \"number\") {\r\n          msg.push(regexp.source);\r\n          msg.push(\"-\".repeat(err.lastIndex) + \"^\");\r\n        }\r\n        _err = new Error(msg.join(\"\\n\"));\r\n      }\r\n      setError(_err);\r\n      debugErr(_err);\r\n    }\r\n  }, [regexp, regulex]);\r\n  return (\r\n    <Box {...boxProps}>\r\n      {error && (\r\n        <Typography className={styles.error} component=\"pre\">\r\n          <code>{error.message}</code>\r\n        </Typography>\r\n      )}\r\n      <div\r\n        ref={containerRef}\r\n        className={styles.regexpContainer}\r\n        style={{ height: error ? 0 : \"auto\" }}\r\n      />\r\n    </Box>\r\n  );\r\n};","import { useAsync } from \"react-use\";\n\nexport default function useRegulex() {\n  return useAsync(async () => {\n    return new Promise<any>((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.src = process.env.PUBLIC_URL + \"/regulex.js\";\n      script.onload = () => {\n        const regulex = window.require(\"regulex\");\n        resolve(regulex);\n      };\n      script.onerror = () => {\n        reject(new Error(\"load regulex error!\"));\n      };\n      document.body.appendChild(script);\n    });\n  });\n}\n","import React from \"react\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport githubTheme from \"prism-react-renderer/themes/github\";\nimport { Box } from \"@material-ui/core\";\n\nexport type Language =\n  | \"markup\"\n  | \"bash\"\n  | \"clike\"\n  | \"c\"\n  | \"cpp\"\n  | \"css\"\n  | \"javascript\"\n  | \"jsx\"\n  | \"coffeescript\"\n  | \"actionscript\"\n  | \"css-extr\"\n  | \"diff\"\n  | \"git\"\n  | \"go\"\n  | \"graphql\"\n  | \"handlebars\"\n  | \"json\"\n  | \"less\"\n  | \"makefile\"\n  | \"markdown\"\n  | \"objectivec\"\n  | \"ocaml\"\n  | \"python\"\n  | \"reason\"\n  | \"sass\"\n  | \"scss\"\n  | \"sql\"\n  | \"stylus\"\n  | \"tsx\"\n  | \"typescript\"\n  | \"wasm\"\n  | \"yaml\";\n\nexport type CodeBlockProps = {\n  code: string;\n  language: Language;\n};\n\nexport const CodeBlock: React.FC<CodeBlockProps> = ({ code, language }) => {\n  return (\n    <Highlight\n      {...defaultProps}\n      code={code}\n      language={language}\n      theme={githubTheme}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <Box\n          component=\"pre\"\n          lineHeight={1.5}\n          py={1}\n          px={1}\n          className={className}\n          style={{...style, margin: 0}}\n        >\n          <Box component=\"code\">\n            {tokens.map((line, i) => (\n              <div {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n          </Box>\n        </Box>\n      )}\n    </Highlight>\n  );\n};\n","import { useLocation, useHistory } from \"react-router-dom\";\nimport { useCallback } from \"react\";\n\n/**\n * 获取 URL 查询参数\n * 例如 regexp?source=abc&flags=g 返回查询参数 {source: \"abc\", flags: \"g\"}\n */\nexport const useQuery = () => {\n  const {pathname, search} = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(search);\n  const query: Record<string, string> = {}\n  for(let [key, value] of searchParams) {\n    query[key] = value\n  }\n  const setQuery = useCallback(\n    (query: Record<string, string>) => {\n      const search = new URLSearchParams(query).toString();\n      history.replace({ pathname, search });\n    },\n    [history, pathname]\n  );\n\n  return [query, setQuery] as const;\n};","export const debugErr = (...args: any[]) =>\r\n  process.env.NODE_ENV !== \"production\" && console.error(...args);\r\nexport const debugLog = (...args: any[]) =>\r\n  process.env.NODE_ENV !== \"production\" && console.log(...args);\r\nexport const debugWarn = (...args: any[]) =>\r\n  process.env.NODE_ENV !== \"production\" && console.warn(...args);\r\n\r\nexport const copyToClipboard = (text: string): boolean => {\r\n  const textArea = document.createElement('textarea')\r\n\r\n  textArea.style.position = 'fixed'\r\n  textArea.style.visibility = '-10000px'\r\n  textArea.value = text\r\n\r\n  document.body.appendChild(textArea)\r\n  textArea.focus()\r\n  textArea.select()\r\n\r\n  if (!document.execCommand('copy')) {\r\n    console.warn('浏览器不支持 document.execCommand(\"copy\")')\r\n    document.body.removeChild(textArea)\r\n    return false\r\n  } else {\r\n    document.body.removeChild(textArea)\r\n    return true\r\n  }\r\n}"],"sourceRoot":""}